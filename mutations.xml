<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1319'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen</mutatedClass><mutatedMethod>canGoTo</mutatedMethod><methodDescription>(III)Z</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>17</index><block>48</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen</mutatedClass><mutatedMethod>canGoTo</mutatedMethod><methodDescription>(III)Z</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>47</block><killingTest>br.com.guifr.beecrowd.QueenTest.Return false when ask can go to position x y</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1319'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen</mutatedClass><mutatedMethod>canGoTo</mutatedMethod><methodDescription>(III)Z</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>48</block><killingTest>br.com.guifr.beecrowd.QueenParametizedTest.57 - Return [2] when The Queen started [4] [5] and ended [1] [1]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen</mutatedClass><mutatedMethod>canGoTo</mutatedMethod><methodDescription>(III)Z</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>49</block><killingTest>br.com.guifr.beecrowd.QueenTest.Return false when ask can go to position x y</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen</mutatedClass><mutatedMethod>canGoTo</mutatedMethod><methodDescription>(III)Z</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>32</index><block>51</block><killingTest>br.com.guifr.beecrowd.QueenTest.Return false when ask can go to position x y</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen</mutatedClass><mutatedMethod>diagonalXToLeftYDown</mutatedMethod><methodDescription>(III)Ljava/lang/Integer;</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><block>28</block><killingTest>br.com.guifr.beecrowd.QueenTest.Return 1 when search diagonal in x axle to left up</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/Queen::diagonalXToLeftYDown to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen</mutatedClass><mutatedMethod>diagonalXToLeftYUp</mutatedMethod><methodDescription>(III)Ljava/lang/Integer;</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><block>27</block><killingTest>br.com.guifr.beecrowd.QueenTest.Return 1 when search diagonal in x axle to left up</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/Queen::diagonalXToLeftYUp to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen</mutatedClass><mutatedMethod>diagonalXToRightYDown</mutatedMethod><methodDescription>(III)Ljava/lang/Integer;</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><block>29</block><killingTest>br.com.guifr.beecrowd.QueenTest.Return 1 when search diagonal in x axle to left up</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/Queen::diagonalXToRightYDown to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen</mutatedClass><mutatedMethod>diagonalXToRightYUp</mutatedMethod><methodDescription>(III)Ljava/lang/Integer;</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><block>30</block><killingTest>br.com.guifr.beecrowd.QueenTest.Return 1 when search diagonal in x axle to left up</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/Queen::diagonalXToRightYUp to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen</mutatedClass><mutatedMethod>endedIn</mutatedMethod><methodDescription>(II)Lbr/com/guifr/beecrowd/Queen;</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>5</block><killingTest>br.com.guifr.beecrowd.QueenTest.Return false when ask can go to position x y</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/Queen::endedIn to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen</mutatedClass><mutatedMethod>howMoves</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>6</block><killingTest>br.com.guifr.beecrowd.QueenTest.Return 0 when The Queen started 3 5 and ended 2 5</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen</mutatedClass><mutatedMethod>howMoves</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>7</block><killingTest>br.com.guifr.beecrowd.QueenTest.Return 0 when The Queen started 3 5 and ended 2 5</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen</mutatedClass><mutatedMethod>howMoves</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><block>8</block><killingTest>br.com.guifr.beecrowd.QueenTest.Return 0 when The Queen started 3 5 and ended 2 5</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen</mutatedClass><mutatedMethod>howMoves</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>60</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>27</index><block>9</block><killingTest>br.com.guifr.beecrowd.QueenTest.Return 1 when The Queen started 4 4 and ended 6 2</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>1</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>68</index><block>2</block><killingTest/><description>removed call to java/io/PrintStream::println</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1318'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lbr/com/guifr/beecrowd/Queen$Axle;Lbr/com/guifr/beecrowd/Queen$Axle;I)Ljava/lang/Integer;</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>42</index><block>16</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lbr/com/guifr/beecrowd/Queen$Axle;Lbr/com/guifr/beecrowd/Queen$Axle;I)Ljava/lang/Integer;</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>11</block><killingTest>br.com.guifr.beecrowd.QueenTest.Return 1 when search diagonal in x axle to left up</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lbr/com/guifr/beecrowd/Queen$Axle;Lbr/com/guifr/beecrowd/Queen$Axle;I)Ljava/lang/Integer;</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>12</block><killingTest>br.com.guifr.beecrowd.QueenTest.Return 1 when search diagonal in x axle to left up</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lbr/com/guifr/beecrowd/Queen$Axle;Lbr/com/guifr/beecrowd/Queen$Axle;I)Ljava/lang/Integer;</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>13</block><killingTest>br.com.guifr.beecrowd.QueenTest.Return 1 when search diagonal in x axle to left up</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1318'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lbr/com/guifr/beecrowd/Queen$Axle;Lbr/com/guifr/beecrowd/Queen$Axle;I)Ljava/lang/Integer;</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>15</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lbr/com/guifr/beecrowd/Queen$Axle;Lbr/com/guifr/beecrowd/Queen$Axle;I)Ljava/lang/Integer;</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>42</index><block>16</block><killingTest>br.com.guifr.beecrowd.QueenTest.Return 1 when search diagonal in x axle to left up</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lbr/com/guifr/beecrowd/Queen$Axle;Lbr/com/guifr/beecrowd/Queen$Axle;I)Ljava/lang/Integer;</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>56</index><block>18</block><killingTest>br.com.guifr.beecrowd.QueenTest.Return 1 when The Queen started 4 4 and ended 6 2</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1318'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lbr/com/guifr/beecrowd/Queen$Axle;Lbr/com/guifr/beecrowd/Queen$Axle;I)Ljava/lang/Integer;</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>72</index><block>20</block><killingTest>br.com.guifr.beecrowd.QueenParametizedTest.7 - Return [2] when The Queen started [4] [4] and ended [2] [7]</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1318'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lbr/com/guifr/beecrowd/Queen$Axle;Lbr/com/guifr/beecrowd/Queen$Axle;I)Ljava/lang/Integer;</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>61</index><block>19</block><killingTest/><description>mutated return of Object value for br/com/guifr/beecrowd/Queen::move to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lbr/com/guifr/beecrowd/Queen$Axle;Lbr/com/guifr/beecrowd/Queen$Axle;I)Ljava/lang/Integer;</methodDescription><lineNumber>121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>97</index><block>22</block><killingTest>br.com.guifr.beecrowd.QueenTest.Return 1 when search diagonal in x axle to left up</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/Queen::move to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lbr/com/guifr/beecrowd/Queen$Axle;Lbr/com/guifr/beecrowd/Queen$Axle;I)Ljava/lang/Integer;</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>4</index><block>11</block><killingTest>br.com.guifr.beecrowd.QueenTest.Return 1 when search diagonal in x axle to left up</killingTest><description>removed call to br/com/guifr/beecrowd/Queen$Axle::execute</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lbr/com/guifr/beecrowd/Queen$Axle;Lbr/com/guifr/beecrowd/Queen$Axle;I)Ljava/lang/Integer;</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><block>11</block><killingTest>br.com.guifr.beecrowd.QueenTest.Return 1 when search diagonal in x axle to left up</killingTest><description>removed call to br/com/guifr/beecrowd/Queen$Axle::execute</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lbr/com/guifr/beecrowd/Queen$Axle;Lbr/com/guifr/beecrowd/Queen$Axle;I)Ljava/lang/Integer;</methodDescription><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>87</index><block>21</block><killingTest/><description>removed call to br/com/guifr/beecrowd/Queen$Axle::execute</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lbr/com/guifr/beecrowd/Queen$Axle;Lbr/com/guifr/beecrowd/Queen$Axle;I)Ljava/lang/Integer;</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>91</index><block>21</block><killingTest/><description>removed call to br/com/guifr/beecrowd/Queen$Axle::execute</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1319'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen</mutatedClass><mutatedMethod>possiblePosition</mutatedMethod><methodDescription>(II)Z</methodDescription><lineNumber>198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>51</index><block>54</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen</mutatedClass><mutatedMethod>possiblePosition</mutatedMethod><methodDescription>(II)Z</methodDescription><lineNumber>198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>43</index><block>52</block><killingTest>br.com.guifr.beecrowd.QueenTest.Return 2 when The Queen started 3 4 and ended 5 7</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen</mutatedClass><mutatedMethod>possiblePosition</mutatedMethod><methodDescription>(II)Z</methodDescription><lineNumber>198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>51</index><block>54</block><killingTest>br.com.guifr.beecrowd.QueenTest.Return false when ask can go to position x y</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen</mutatedClass><mutatedMethod>possiblePosition</mutatedMethod><methodDescription>(II)Z</methodDescription><lineNumber>198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>59</index><block>56</block><killingTest>br.com.guifr.beecrowd.QueenTest.Return false when ask can go to position x y</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>54</index><block>58</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>63</index><block>59</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>93</index><block>61</block><killingTest/><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><block>58</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>204</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>57</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>54</index><block>58</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>63</index><block>59</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>17</index><block>58</block><killingTest/><description>removed call to java/io/PrintStream::println</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>90</index><block>61</block><killingTest/><description>removed call to java/io/PrintStream::println</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen</mutatedClass><mutatedMethod>printBoard</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>100</index><block>62</block><killingTest/><description>removed call to java/io/PrintStream::println</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen</mutatedClass><mutatedMethod>search</mutatedMethod><methodDescription>(III)I</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>3</index><block>10</block><killingTest>br.com.guifr.beecrowd.QueenTest.Return 1 when search diagonal in x axle to left up</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1318'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen</mutatedClass><mutatedMethod>search</mutatedMethod><methodDescription>(III)I</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>19</index><block>10</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen</mutatedClass><mutatedMethod>search</mutatedMethod><methodDescription>(III)I</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>89</index><block>10</block><killingTest>br.com.guifr.beecrowd.QueenTest.Return 1 when search diagonal in x axle to left up</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1319'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen</mutatedClass><mutatedMethod>searchEndPositionQueen</mutatedMethod><methodDescription>(III)Z</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>33</index><block>45</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen</mutatedClass><mutatedMethod>searchEndPositionQueen</mutatedMethod><methodDescription>(III)Z</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>41</block><killingTest>br.com.guifr.beecrowd.QueenTest.Return true when ask position x y equal 1</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen</mutatedClass><mutatedMethod>searchEndPositionQueen</mutatedMethod><methodDescription>(III)Z</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>42</block><killingTest>br.com.guifr.beecrowd.QueenTest.Return true when ask position x y equal 1</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen</mutatedClass><mutatedMethod>searchEndPositionQueen</mutatedMethod><methodDescription>(III)Z</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>44</block><killingTest>br.com.guifr.beecrowd.QueenTest.Return 2 when The Queen started 8 8 and ended 2 1</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen</mutatedClass><mutatedMethod>searchEndPositionQueen</mutatedMethod><methodDescription>(III)Z</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>33</index><block>45</block><killingTest>br.com.guifr.beecrowd.QueenTest.Return 1 when search diagonal in x axle to left up</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen</mutatedClass><mutatedMethod>searchEndPositionQueen</mutatedMethod><methodDescription>(III)Z</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>43</index><block>46</block><killingTest>br.com.guifr.beecrowd.QueenTest.Return true when ask position x y equal 1</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen</mutatedClass><mutatedMethod>started</mutatedMethod><methodDescription>(II)Lbr/com/guifr/beecrowd/Queen;</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>4</block><killingTest>br.com.guifr.beecrowd.QueenTest.Return false when ask can go to position x y</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/Queen::started to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1318'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen</mutatedClass><mutatedMethod>willReturn</mutatedMethod><methodDescription>(III)Z</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>23</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen</mutatedClass><mutatedMethod>willReturn</mutatedMethod><methodDescription>(III)Z</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>23</block><killingTest>br.com.guifr.beecrowd.QueenTest.Return 2 when The Queen started 8 8 and ended 2 1</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen</mutatedClass><mutatedMethod>willReturn</mutatedMethod><methodDescription>(III)Z</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>24</block><killingTest>br.com.guifr.beecrowd.QueenTest.Return 1 when search diagonal in x axle to left up</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen</mutatedClass><mutatedMethod>willReturn</mutatedMethod><methodDescription>(III)Z</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>25</index><block>26</block><killingTest>br.com.guifr.beecrowd.QueenTest.Return 1 when search diagonal in x axle to left up</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen</mutatedClass><mutatedMethod>xToLeft</mutatedMethod><methodDescription>(III)Ljava/lang/Integer;</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><block>36</block><killingTest>br.com.guifr.beecrowd.QueenTest.Return 1 when search diagonal in x axle to left up</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/Queen::xToLeft to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen</mutatedClass><mutatedMethod>xToRight</mutatedMethod><methodDescription>(III)Ljava/lang/Integer;</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>52</index><block>40</block><killingTest>br.com.guifr.beecrowd.QueenTest.Return 1 when search in x axle to right</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1318'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen</mutatedClass><mutatedMethod>xToRight</mutatedMethod><methodDescription>(III)Ljava/lang/Integer;</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>37</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1318'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen</mutatedClass><mutatedMethod>xToRight</mutatedMethod><methodDescription>(III)Ljava/lang/Integer;</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>40</index><block>38</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen</mutatedClass><mutatedMethod>xToRight</mutatedMethod><methodDescription>(III)Ljava/lang/Integer;</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>63</index><block>40</block><killingTest>br.com.guifr.beecrowd.QueenTest.Return 1 when search diagonal in x axle to left up</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/Queen::xToRight to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen</mutatedClass><mutatedMethod>yToDown</mutatedMethod><methodDescription>(III)Ljava/lang/Integer;</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><block>31</block><killingTest>br.com.guifr.beecrowd.QueenTest.Return 1 when search diagonal in x axle to left up</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/Queen::yToDown to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen</mutatedClass><mutatedMethod>yToUp</mutatedMethod><methodDescription>(III)Ljava/lang/Integer;</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>57</index><block>35</block><killingTest>br.com.guifr.beecrowd.QueenTest.Return 1 when search in y axle to up</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen</mutatedClass><mutatedMethod>yToUp</mutatedMethod><methodDescription>(III)Ljava/lang/Integer;</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>32</block><killingTest>br.com.guifr.beecrowd.QueenTest.Return 1 when search in y axle to up</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1318'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen</mutatedClass><mutatedMethod>yToUp</mutatedMethod><methodDescription>(III)Ljava/lang/Integer;</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>40</index><block>33</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen</mutatedClass><mutatedMethod>yToUp</mutatedMethod><methodDescription>(III)Ljava/lang/Integer;</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>63</index><block>35</block><killingTest>br.com.guifr.beecrowd.QueenTest.Return 1 when search diagonal in x axle to left up</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/Queen::yToUp to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TheClubBallroom.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.TheClubBallroom</mutatedClass><mutatedMethod>calculateBy</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>57</index><block>19</block><killingTest>br.com.guifr.beecrowd.TheClubBallroomTest.Return 7 when calculate using width rectangle is 4 and 5, width = 100 and planks is 1 2 2 2 2 3 3 4 4 5</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TheClubBallroom.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.TheClubBallroom</mutatedClass><mutatedMethod>calculateBy</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>87</index><block>21</block><killingTest>br.com.guifr.beecrowd.TheClubBallroomTest.Return 7 when calculate using width rectangle is 4 and 5, width = 100 and planks is 1 2 2 2 2 3 3 4 4 5</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>TheClubBallroom.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.TheClubBallroom</mutatedClass><mutatedMethod>calculateBy</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>142</index><block>27</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>TheClubBallroom.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.TheClubBallroom</mutatedClass><mutatedMethod>calculateBy</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>158</index><block>30</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TheClubBallroom.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.TheClubBallroom</mutatedClass><mutatedMethod>calculateBy</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>50</index><block>19</block><killingTest>br.com.guifr.beecrowd.TheClubBallroomTest.Return 7 when calculate using width rectangle is 4 and 5, width = 100 and planks is 1 2 2 2 2 3 3 4 4 5</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TheClubBallroom.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.TheClubBallroom</mutatedClass><mutatedMethod>calculateBy</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>136</index><block>27</block><killingTest>br.com.guifr.beecrowd.TheClubBallroomTest.Return 7 when calculate using width rectangle is 4 and 5, width = 100 and planks is 1 2 2 2 2 3 3 4 4 5</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TheClubBallroom.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.TheClubBallroom</mutatedClass><mutatedMethod>calculateBy</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>17</block><killingTest>br.com.guifr.beecrowd.TheClubBallroomTest.Return 7 when calculate using width rectangle is 4 and 5, width = 100 and planks is 1 2 2 2 2 3 3 4 4 5</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TheClubBallroom.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.TheClubBallroom</mutatedClass><mutatedMethod>calculateBy</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>8</index><block>17</block><killingTest>br.com.guifr.beecrowd.TheClubBallroomTest.Return 7 when calculate using width rectangle is 4 and 5, width = 100 and planks is 1 2 2 2 2 3 3 4 4 5</killingTest><description>Replaced integer division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TheClubBallroom.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.TheClubBallroom</mutatedClass><mutatedMethod>calculateBy</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>128</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>77</index><block>21</block><killingTest>br.com.guifr.beecrowd.TheClubBallroomTest.Return 7 when calculate using width rectangle is 4 and 5, width = 100 and planks is 1 2 2 2 2 3 3 4 4 5</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TheClubBallroom.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.TheClubBallroom</mutatedClass><mutatedMethod>calculateBy</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>132</index><block>27</block><killingTest>br.com.guifr.beecrowd.TheClubBallroomTest.Return 7 when calculate using width rectangle is 4 and 5, width = 100 and planks is 1 2 2 2 2 3 3 4 4 5</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TheClubBallroom.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.TheClubBallroom</mutatedClass><mutatedMethod>calculateBy</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>47</index><block>18</block><killingTest>br.com.guifr.beecrowd.TheClubBallroomTest.Return 7 when calculate using width rectangle is 4 and 5, width = 100 and planks is 1 2 2 2 2 3 3 4 4 5</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TheClubBallroom.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.TheClubBallroom</mutatedClass><mutatedMethod>calculateBy</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>57</index><block>19</block><killingTest>br.com.guifr.beecrowd.TheClubBallroomTest.Return 7 when calculate using width rectangle is 4 and 5, width = 100 and planks is 1 2 2 2 2 3 3 4 4 5</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TheClubBallroom.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.TheClubBallroom</mutatedClass><mutatedMethod>calculateBy</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>87</index><block>21</block><killingTest>br.com.guifr.beecrowd.TheClubBallroomTest.Return 7 when calculate using width rectangle is 4 and 5, width = 100 and planks is 1 2 2 2 2 3 3 4 4 5</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TheClubBallroom.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.TheClubBallroom</mutatedClass><mutatedMethod>calculateBy</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>92</index><block>22</block><killingTest>br.com.guifr.beecrowd.TheClubBallroomTest.Return 7 when calculate using width rectangle is 4 and 5, width = 100 and planks is 1 2 2 2 2 3 3 4 4 5</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TheClubBallroom.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.TheClubBallroom</mutatedClass><mutatedMethod>calculateBy</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>142</index><block>27</block><killingTest>br.com.guifr.beecrowd.TheClubBallroomTest.Return 7 when calculate using width rectangle is 4 and 5, width = 100 and planks is 1 2 2 2 2 3 3 4 4 5</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>TheClubBallroom.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.TheClubBallroom</mutatedClass><mutatedMethod>calculateBy</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>158</index><block>30</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TheClubBallroom.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.TheClubBallroom</mutatedClass><mutatedMethod>calculateBy</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>96</index><block>23</block><killingTest>br.com.guifr.beecrowd.TheClubBallroomTest.Return 5 when rectangle is 5 and 4, width = 100 and planks is 4 5 4 4 4 4 3</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TheClubBallroom.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.TheClubBallroom</mutatedClass><mutatedMethod>calculateBy</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>119</index><block>25</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TheClubBallroom.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.TheClubBallroom</mutatedClass><mutatedMethod>calculateBy</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>147</index><block>28</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TheClubBallroom.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.TheClubBallroom</mutatedClass><mutatedMethod>calculateBy</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>168</index><block>31</block><killingTest>br.com.guifr.beecrowd.TheClubBallroomTest.Return 7 when calculate using width rectangle is 4 and 5, width = 100 and planks is 1 2 2 2 2 3 3 4 4 5</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TheClubBallroom.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.TheClubBallroom</mutatedClass><mutatedMethod>calculateUsingingLength</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>199</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>43</block><killingTest>br.com.guifr.beecrowd.TheClubBallroomTest.Return 5 when rectangle is 5 and 4, width = 100 and planks is 4 5 4 4 4 4 3</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TheClubBallroom.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.TheClubBallroom</mutatedClass><mutatedMethod>calculateUsingingWidth</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>42</block><killingTest>br.com.guifr.beecrowd.TheClubBallroomTest.Return 7 when calculate using width rectangle is 4 and 5, width = 100 and planks is 1 2 2 2 2 3 3 4 4 5</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>TheClubBallroom.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.TheClubBallroom</mutatedClass><mutatedMethod>coverOneLine</mutatedMethod><methodDescription>(Ljava/util/List;I)I</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>15</index><block>32</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TheClubBallroom.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.TheClubBallroom</mutatedClass><mutatedMethod>coverOneLine</mutatedMethod><methodDescription>(Ljava/util/List;I)I</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>24</index><block>33</block><killingTest>br.com.guifr.beecrowd.TheClubBallroomTest.Return 7 when calculate using width rectangle is 4 and 5, width = 100 and planks is 1 2 2 2 2 3 3 4 4 5</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TheClubBallroom.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.TheClubBallroom</mutatedClass><mutatedMethod>coverOneLine</mutatedMethod><methodDescription>(Ljava/util/List;I)I</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>27</index><block>34</block><killingTest>br.com.guifr.beecrowd.TheClubBallroomTest.Return 7 when calculate using width rectangle is 4 and 5, width = 100 and planks is 1 2 2 2 2 3 3 4 4 5</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TheClubBallroom.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.TheClubBallroom</mutatedClass><mutatedMethod>coverOneLine</mutatedMethod><methodDescription>(Ljava/util/List;I)I</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>48</index><block>36</block><killingTest>br.com.guifr.beecrowd.TheClubBallroomTest.Return 7 when calculate using width rectangle is 4 and 5, width = 100 and planks is 1 2 2 2 2 3 3 4 4 5</killingTest><description>Changed increment from -1 to 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TheClubBallroom.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.TheClubBallroom</mutatedClass><mutatedMethod>coverOneLine</mutatedMethod><methodDescription>(Ljava/util/List;I)I</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>10</index><block>32</block><killingTest>br.com.guifr.beecrowd.TheClubBallroomTest.Return 7 when calculate using width rectangle is 4 and 5, width = 100 and planks is 1 2 2 2 2 3 3 4 4 5</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TheClubBallroom.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.TheClubBallroom</mutatedClass><mutatedMethod>coverOneLine</mutatedMethod><methodDescription>(Ljava/util/List;I)I</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>36</index><block>34</block><killingTest>br.com.guifr.beecrowd.TheClubBallroomTest.Return 7 when calculate using width rectangle is 4 and 5, width = 100 and planks is 1 2 2 2 2 3 3 4 4 5</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>TheClubBallroom.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.TheClubBallroom</mutatedClass><mutatedMethod>coverOneLine</mutatedMethod><methodDescription>(Ljava/util/List;I)I</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>32</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>TheClubBallroom.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.TheClubBallroom</mutatedClass><mutatedMethod>coverOneLine</mutatedMethod><methodDescription>(Ljava/util/List;I)I</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>33</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TheClubBallroom.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.TheClubBallroom</mutatedClass><mutatedMethod>coverOneLine</mutatedMethod><methodDescription>(Ljava/util/List;I)I</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>41</index><block>34</block><killingTest>br.com.guifr.beecrowd.TheClubBallroomTest.Return 7 when calculate using width rectangle is 4 and 5, width = 100 and planks is 1 2 2 2 2 3 3 4 4 5</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TheClubBallroom.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.TheClubBallroom</mutatedClass><mutatedMethod>coverOneLine</mutatedMethod><methodDescription>(Ljava/util/List;I)I</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>54</index><block>37</block><killingTest>br.com.guifr.beecrowd.TheClubBallroomTest.Return 7 when calculate using width rectangle is 4 and 5, width = 100 and planks is 1 2 2 2 2 3 3 4 4 5</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TheClubBallroom.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.TheClubBallroom</mutatedClass><mutatedMethod>coverOneLine</mutatedMethod><methodDescription>(Ljava/util/List;I)I</methodDescription><lineNumber>188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>67</index><block>39</block><killingTest>br.com.guifr.beecrowd.TheClubBallroomTest.Return 7 when calculate using width rectangle is 4 and 5, width = 100 and planks is 1 2 2 2 2 3 3 4 4 5</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TheClubBallroom.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.TheClubBallroom</mutatedClass><mutatedMethod>coverOneLine</mutatedMethod><methodDescription>(Ljava/util/List;I)I</methodDescription><lineNumber>191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>80</index><block>41</block><killingTest>br.com.guifr.beecrowd.TheClubBallroomTest.Return 7 when calculate using width rectangle is 4 and 5, width = 100 and planks is 1 2 2 2 2 3 3 4 4 5</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TheClubBallroom.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.TheClubBallroom</mutatedClass><mutatedMethod>howManyMinimumPlanksCoverFloor</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>9</block><killingTest>br.com.guifr.beecrowd.TheClubBallroomTest.Return &#39;impossivel&#39; when rectangle is 4 and 5, width = 99 and planks is 4 4 4 4</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TheClubBallroom.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.TheClubBallroom</mutatedClass><mutatedMethod>howManyMinimumPlanksCoverFloor</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>10</block><killingTest>br.com.guifr.beecrowd.TheClubBallroomTest.Return 5 when rectangle is 5 and 4, width = 100 and planks is 4 5 4 4 4 4 3</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TheClubBallroom.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.TheClubBallroom</mutatedClass><mutatedMethod>howManyMinimumPlanksCoverFloor</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>12</block><killingTest>br.com.guifr.beecrowd.TheClubBallroomTest.Return 5 when rectangle is 5 and 4, width = 100 and planks is 4 5 4 4 4 4 3</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TheClubBallroom.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.TheClubBallroom</mutatedClass><mutatedMethod>howManyMinimumPlanksCoverFloor</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>84</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>42</index><block>14</block><killingTest>br.com.guifr.beecrowd.TheClubBallroomTest.Return 7 when rectangle is 4 and 5, width = 100 and planks is 1 2 2 2 2 3 3 4 4 5</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TheClubBallroom.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.TheClubBallroom</mutatedClass><mutatedMethod>howManyMinimumPlanksCoverFloor</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>36</index><block>13</block><killingTest>br.com.guifr.beecrowd.TheClubBallroomTest.Return 5 when rectangle is 5 and 4, width = 100 and planks is 4 5 4 4 4 4 3</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TheClubBallroom.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.TheClubBallroom</mutatedClass><mutatedMethod>howManyMinimumPlanksCoverFloor</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>46</index><block>15</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TheClubBallroom.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.TheClubBallroom</mutatedClass><mutatedMethod>howManyMinimumPlanksCoverFloor</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>53</index><block>16</block><killingTest>br.com.guifr.beecrowd.TheClubBallroomTest.Return 7 when rectangle is 4 and 5, width = 100 and planks is 1 2 2 2 2 3 3 4 4 5</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TheClubBallroom.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.TheClubBallroom</mutatedClass><mutatedMethod>lambda$main$0</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>44</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TheClubBallroom.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.TheClubBallroom</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>2</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TheClubBallroom.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.TheClubBallroom</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>82</index><block>3</block><killingTest/><description>removed call to java/io/PrintStream::println</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TheClubBallroom.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.TheClubBallroom</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>95</index><block>4</block><killingTest/><description>removed call to java/io/PrintStream::println</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TheClubBallroom.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.TheClubBallroom</mutatedClass><mutatedMethod>of</mutatedMethod><methodDescription>(II)Lbr/com/guifr/beecrowd/TheClubBallroom;</methodDescription><lineNumber>52</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>6</block><killingTest>br.com.guifr.beecrowd.TheClubBallroomTest.Return 7 when calculate using width rectangle is 4 and 5, width = 100 and planks is 1 2 2 2 2 3 3 4 4 5</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/TheClubBallroom::of to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TheClubBallroom.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.TheClubBallroom</mutatedClass><mutatedMethod>widthPlanks</mutatedMethod><methodDescription>(I)Lbr/com/guifr/beecrowd/TheClubBallroom;</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>7</block><killingTest>br.com.guifr.beecrowd.TheClubBallroomTest.Return 7 when calculate using width rectangle is 4 and 5, width = 100 and planks is 1 2 2 2 2 3 3 4 4 5</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/TheClubBallroom::widthPlanks to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TheClubBallroom.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.TheClubBallroom</mutatedClass><mutatedMethod>withPlanks</mutatedMethod><methodDescription>([I)Lbr/com/guifr/beecrowd/TheClubBallroom;</methodDescription><lineNumber>70</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>21</index><block>8</block><killingTest>br.com.guifr.beecrowd.TheClubBallroomTest.Return 7 when calculate using width rectangle is 4 and 5, width = 100 and planks is 1 2 2 2 2 3 3 4 4 5</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/TheClubBallroom::withPlanks to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>JosephsCousin.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.JosephsCousin</mutatedClass><mutatedMethod>firstPositionHasOne</mutatedMethod><methodDescription>([I)I</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>17</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>JosephsCousin.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.JosephsCousin</mutatedClass><mutatedMethod>firstPositionHasOne</mutatedMethod><methodDescription>([I)I</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><block>19</block><killingTest>br.com.guifr.beecrowd.JosephsCousinTest.Return the position has value equal one, this test expect 1</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>JosephsCousin.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.JosephsCousin</mutatedClass><mutatedMethod>firstPositionHasOne</mutatedMethod><methodDescription>([I)I</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>17</block><killingTest>br.com.guifr.beecrowd.JosephsCousinTest.Return the position has value equal one, this test expect 1</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>JosephsCousin.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.JosephsCousin</mutatedClass><mutatedMethod>firstPositionHasOne</mutatedMethod><methodDescription>([I)I</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>18</block><killingTest>br.com.guifr.beecrowd.JosephsCousinTest.Return the position has value equal one, this test expect 1</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>JosephsCousin.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.JosephsCousin</mutatedClass><mutatedMethod>firstPositionHasOne</mutatedMethod><methodDescription>([I)I</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>23</index><block>19</block><killingTest>br.com.guifr.beecrowd.JosephsCousinTest.Return the position has value equal one, this test expect 1</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>JosephsCousin.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.JosephsCousin</mutatedClass><mutatedMethod>firstPositionHasOne</mutatedMethod><methodDescription>([I)I</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>33</index><block>21</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>JosephsCousin.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.JosephsCousin</mutatedClass><mutatedMethod>howManyOne</mutatedMethod><methodDescription>([I)I</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>16</block><killingTest>br.com.guifr.beecrowd.JosephsCousinTest.Return amount position has value equal one, this test expect 1</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>JosephsCousin.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.JosephsCousin</mutatedClass><mutatedMethod>isCousin</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>5</index><block>5</block><killingTest>br.com.guifr.beecrowd.JosephsCousinTest.Return 11 when ask next cousin with 7</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9'><sourceFile>JosephsCousin.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.JosephsCousin</mutatedClass><mutatedMethod>isCousin</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>59</index><block>12</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='12'><sourceFile>JosephsCousin.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.JosephsCousin</mutatedClass><mutatedMethod>isCousin</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>42</index><block>10</block><killingTest/><description>Replaced integer division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>JosephsCousin.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.JosephsCousin</mutatedClass><mutatedMethod>isCousin</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>48</index><block>10</block><killingTest>br.com.guifr.beecrowd.JosephsCousinTest.Return 11 when ask next cousin with 7</killingTest><description>Replaced integer modulus with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>JosephsCousin.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.JosephsCousin</mutatedClass><mutatedMethod>isCousin</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>5</block><killingTest>br.com.guifr.beecrowd.JosephsCousinTest.Return 11 when ask next cousin with 7</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>JosephsCousin.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.JosephsCousin</mutatedClass><mutatedMethod>isCousin</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>7</block><killingTest>br.com.guifr.beecrowd.JosephsCousinTest.Return 11 when ask next cousin with 7</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>JosephsCousin.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.JosephsCousin</mutatedClass><mutatedMethod>isCousin</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>49</index><block>10</block><killingTest>br.com.guifr.beecrowd.JosephsCousinTest.Return 23 when ask next cousin with 19</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>JosephsCousin.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.JosephsCousin</mutatedClass><mutatedMethod>isCousin</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>59</index><block>12</block><killingTest>br.com.guifr.beecrowd.JosephsCousinTest.Return 11 when ask next cousin with 7</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>JosephsCousin.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.JosephsCousin</mutatedClass><mutatedMethod>isCousin</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>6</block><killingTest>br.com.guifr.beecrowd.JosephsCousinTest.Return false when ask if 0 is number cousin</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>JosephsCousin.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.JosephsCousin</mutatedClass><mutatedMethod>isCousin</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>21</index><block>8</block><killingTest>br.com.guifr.beecrowd.JosephsCousinTest.Return 11 when ask next cousin with 7</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>JosephsCousin.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.JosephsCousin</mutatedClass><mutatedMethod>isCousin</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>52</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>53</index><block>11</block><killingTest>br.com.guifr.beecrowd.JosephsCousinTest.Return 11 when ask next cousin with 7</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>JosephsCousin.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.JosephsCousin</mutatedClass><mutatedMethod>isCousin</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>60</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>78</index><block>15</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>JosephsCousin.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.JosephsCousin</mutatedClass><mutatedMethod>lambda$howManyOne$0</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>34</block><killingTest>br.com.guifr.beecrowd.JosephsCousinTest.Return amount position has value equal one, this test expect 1</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>JosephsCousin.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.JosephsCousin</mutatedClass><mutatedMethod>lambda$howManyOne$0</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>13</index><block>36</block><killingTest>br.com.guifr.beecrowd.JosephsCousinTest.Return amount position has value equal one, this test expect 1</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>JosephsCousin.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.JosephsCousin</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>1</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>JosephsCousin.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.JosephsCousin</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>24</index><block>2</block><killingTest/><description>removed call to java/io/PrintStream::println</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>JosephsCousin.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.JosephsCousin</mutatedClass><mutatedMethod>nextCousin</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>4</index><block>22</block><killingTest>br.com.guifr.beecrowd.JosephsCousinTest.Return 11 when ask next cousin with 7</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>JosephsCousin.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.JosephsCousin</mutatedClass><mutatedMethod>nextCousin</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>22</block><killingTest>br.com.guifr.beecrowd.JosephsCousinTest.Return 11 when ask next cousin with 7</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>JosephsCousin.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.JosephsCousin</mutatedClass><mutatedMethod>nextCousin</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>13</index><block>24</block><killingTest>br.com.guifr.beecrowd.JosephsCousinTest.Return 11 when ask next cousin with 7</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>JosephsCousin.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.JosephsCousin</mutatedClass><mutatedMethod>saving</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>25</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>JosephsCousin.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.JosephsCousin</mutatedClass><mutatedMethod>saving</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>40</index><block>27</block><killingTest>br.com.guifr.beecrowd.JosephsCousinTest.Return 7 when input amount people is 9</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>JosephsCousin.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.JosephsCousin</mutatedClass><mutatedMethod>saving</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>68</index><block>30</block><killingTest>br.com.guifr.beecrowd.JosephsCousinTest.Return 7 when input amount people is 9</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>JosephsCousin.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.JosephsCousin</mutatedClass><mutatedMethod>saving</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>67</index><block>30</block><killingTest/><description>Changed increment from -1 to 1</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>JosephsCousin.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.JosephsCousin</mutatedClass><mutatedMethod>saving</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>82</index><block>32</block><killingTest/><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>JosephsCousin.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.JosephsCousin</mutatedClass><mutatedMethod>saving</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>25</block><killingTest>br.com.guifr.beecrowd.JosephsCousinTest.Return 7 when input amount people is 9</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>JosephsCousin.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.JosephsCousin</mutatedClass><mutatedMethod>saving</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>40</index><block>27</block><killingTest>br.com.guifr.beecrowd.JosephsCousinTest.Return 7 when input amount people is 9</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>JosephsCousin.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.JosephsCousin</mutatedClass><mutatedMethod>saving</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>46</index><block>28</block><killingTest>br.com.guifr.beecrowd.JosephsCousinTest.Return 7 when input amount people is 9</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>JosephsCousin.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.JosephsCousin</mutatedClass><mutatedMethod>saving</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>68</index><block>30</block><killingTest>br.com.guifr.beecrowd.JosephsCousinTest.Return 7 when input amount people is 9</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>JosephsCousin.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.JosephsCousin</mutatedClass><mutatedMethod>saving</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>26</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>JosephsCousin.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.JosephsCousin</mutatedClass><mutatedMethod>saving</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>52</index><block>29</block><killingTest>br.com.guifr.beecrowd.JosephsCousinTest.Return 7 when input amount people is 9</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>JosephsCousin.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.JosephsCousin</mutatedClass><mutatedMethod>saving</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>88</index><block>33</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>JosephsCousin.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.JosephsCousin</mutatedClass><mutatedMethod>saving</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>26</index><block>27</block><killingTest>br.com.guifr.beecrowd.JosephsCousinTest.Return 4 when input amount people is 6</killingTest><description>removed call to br/com/guifr/beecrowd/No::blacked</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>JosephsCousin.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.JosephsCousin</mutatedClass><mutatedMethod>saving</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>79</index><block>32</block><killingTest>br.com.guifr.beecrowd.JosephsCousinTest.Return 7 when input amount people is 9</killingTest><description>removed call to br/com/guifr/beecrowd/No::blacked</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>JosephsCousin.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.JosephsCousin</mutatedClass><mutatedMethod>withPeople</mutatedMethod><methodDescription>(I)Lbr/com/guifr/beecrowd/JosephsCousin;</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>4</block><killingTest>br.com.guifr.beecrowd.JosephsCousinTest.Return 7 when input amount people is 9</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/JosephsCousin::withPeople to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MusicalLoop.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.MusicalLoop</mutatedClass><mutatedMethod>generateTriples</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/List;</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>16</index><block>19</block><killingTest>br.com.guifr.beecrowd.MusicalLoopTest.Separate triple for analysis ascending and descending with list 300,450,449,450</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MusicalLoop.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.MusicalLoop</mutatedClass><mutatedMethod>generateTriples</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/List;</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>28</index><block>20</block><killingTest>br.com.guifr.beecrowd.MusicalLoopTest.Separate triple for analysis ascending and descending with list 300,450,449,450</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MusicalLoop.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.MusicalLoop</mutatedClass><mutatedMethod>generateTriples</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/List;</methodDescription><lineNumber>84</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>43</index><block>21</block><killingTest>br.com.guifr.beecrowd.MusicalLoopTest.Separate triple for analysis ascending and descending with list 300,450,449,450</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MusicalLoop.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.MusicalLoop</mutatedClass><mutatedMethod>generateTriples</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/List;</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>95</index><block>22</block><killingTest>br.com.guifr.beecrowd.MusicalLoopTest.Separate triple for analysis ascending and descending with list 300,450,449,450</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MusicalLoop.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.MusicalLoop</mutatedClass><mutatedMethod>generateTriples</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/List;</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>20</block><killingTest>br.com.guifr.beecrowd.MusicalLoopTest.Separate triple for analysis ascending and descending with list 300,450,449,450</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MusicalLoop.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.MusicalLoop</mutatedClass><mutatedMethod>generateTriples</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/List;</methodDescription><lineNumber>83</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>38</index><block>21</block><killingTest>br.com.guifr.beecrowd.MusicalLoopTest.Separate triple for analysis ascending and descending with list 300,450,449,450</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MusicalLoop.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.MusicalLoop</mutatedClass><mutatedMethod>generateTriples</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/List;</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>49</index><block>22</block><killingTest>br.com.guifr.beecrowd.MusicalLoopTest.Separate triple for analysis ascending and descending with list 300,450,449,450</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MusicalLoop.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.MusicalLoop</mutatedClass><mutatedMethod>generateTriples</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/List;</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>19</block><killingTest>br.com.guifr.beecrowd.MusicalLoopTest.Separate triple for analysis ascending and descending with list 300,450,449,450</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MusicalLoop.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.MusicalLoop</mutatedClass><mutatedMethod>generateTriples</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/List;</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>20</block><killingTest>br.com.guifr.beecrowd.MusicalLoopTest.Separate triple for analysis ascending and descending with list 300,450,449,450</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MusicalLoop.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.MusicalLoop</mutatedClass><mutatedMethod>generateTriples</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/List;</methodDescription><lineNumber>84</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>43</index><block>21</block><killingTest>br.com.guifr.beecrowd.MusicalLoopTest.Separate triple for analysis ascending and descending with list 300,450,449,450</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MusicalLoop.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.MusicalLoop</mutatedClass><mutatedMethod>generateTriples</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/List;</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>101</index><block>23</block><killingTest>br.com.guifr.beecrowd.MusicalLoopTest.Separate triple for analysis ascending and descending with list 300,450,449,450</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/MusicalLoop::generateTriples to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MusicalLoop.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.MusicalLoop</mutatedClass><mutatedMethod>homManyPeaks</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>21</index><block>4</block><killingTest>br.com.guifr.beecrowd.MusicalLoopTest.Return 2 peaks when notes 40 0 -41 0 41 42</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MusicalLoop.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.MusicalLoop</mutatedClass><mutatedMethod>homManyPeaks</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>16</index><block>4</block><killingTest>br.com.guifr.beecrowd.MusicalLoopTest.Return 2 peaks when notes 40 0 -41 0 41 42</killingTest><description>removed call to java/util/List::forEach</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>MusicalLoop.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.MusicalLoop</mutatedClass><mutatedMethod>isAscending</mutatedMethod><methodDescription>(III)Z</methodDescription><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>5</index><block>5</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>MusicalLoop.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.MusicalLoop</mutatedClass><mutatedMethod>isAscending</mutatedMethod><methodDescription>(III)Z</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>15</index><block>7</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>MusicalLoop.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.MusicalLoop</mutatedClass><mutatedMethod>isAscending</mutatedMethod><methodDescription>(III)Z</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>25</index><block>9</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MusicalLoop.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.MusicalLoop</mutatedClass><mutatedMethod>isAscending</mutatedMethod><methodDescription>(III)Z</methodDescription><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>5</block><killingTest>br.com.guifr.beecrowd.MusicalLoopTest.Return true when the sentence of number 0,41,42 is ascending</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MusicalLoop.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.MusicalLoop</mutatedClass><mutatedMethod>isAscending</mutatedMethod><methodDescription>(III)Z</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>7</block><killingTest>br.com.guifr.beecrowd.MusicalLoopTest.Return true when the sentence of number 0,41,42 is ascending</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MusicalLoop.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.MusicalLoop</mutatedClass><mutatedMethod>isAscending</mutatedMethod><methodDescription>(III)Z</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>9</block><killingTest>br.com.guifr.beecrowd.MusicalLoopTest.Return true when the sentence of number 0,41,42 is ascending</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MusicalLoop.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.MusicalLoop</mutatedClass><mutatedMethod>isAscending</mutatedMethod><methodDescription>(III)Z</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>6</block><killingTest>br.com.guifr.beecrowd.MusicalLoopTest.Return 2 peaks when notes 40 0 -41 0 41 42</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MusicalLoop.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.MusicalLoop</mutatedClass><mutatedMethod>isAscending</mutatedMethod><methodDescription>(III)Z</methodDescription><lineNumber>52</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>19</index><block>8</block><killingTest>br.com.guifr.beecrowd.MusicalLoopTest.Return 2 peaks when notes 40 0 -41 0 41 42</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MusicalLoop.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.MusicalLoop</mutatedClass><mutatedMethod>isAscending</mutatedMethod><methodDescription>(III)Z</methodDescription><lineNumber>55</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>29</index><block>10</block><killingTest>br.com.guifr.beecrowd.MusicalLoopTest.Return 4 peaks when notes 300 450 449 450</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MusicalLoop.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.MusicalLoop</mutatedClass><mutatedMethod>isAscending</mutatedMethod><methodDescription>(III)Z</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>34</index><block>11</block><killingTest>br.com.guifr.beecrowd.MusicalLoopTest.Return true when the sentence of number 0,41,42 is ascending</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>MusicalLoop.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.MusicalLoop</mutatedClass><mutatedMethod>isDescending</mutatedMethod><methodDescription>(III)Z</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>5</index><block>12</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>MusicalLoop.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.MusicalLoop</mutatedClass><mutatedMethod>isDescending</mutatedMethod><methodDescription>(III)Z</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>15</index><block>14</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>MusicalLoop.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.MusicalLoop</mutatedClass><mutatedMethod>isDescending</mutatedMethod><methodDescription>(III)Z</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>25</index><block>16</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MusicalLoop.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.MusicalLoop</mutatedClass><mutatedMethod>isDescending</mutatedMethod><methodDescription>(III)Z</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>12</block><killingTest>br.com.guifr.beecrowd.MusicalLoopTest.Return 2 peaks when notes 40 0 -41 0 41 42</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MusicalLoop.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.MusicalLoop</mutatedClass><mutatedMethod>isDescending</mutatedMethod><methodDescription>(III)Z</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>14</block><killingTest>br.com.guifr.beecrowd.MusicalLoopTest.Return 2 peaks when notes 40 0 -41 0 41 42</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MusicalLoop.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.MusicalLoop</mutatedClass><mutatedMethod>isDescending</mutatedMethod><methodDescription>(III)Z</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>16</block><killingTest>br.com.guifr.beecrowd.MusicalLoopTest.Return 2 peaks when notes 40 0 -41 0 41 42</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MusicalLoop.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.MusicalLoop</mutatedClass><mutatedMethod>isDescending</mutatedMethod><methodDescription>(III)Z</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>13</block><killingTest>br.com.guifr.beecrowd.MusicalLoopTest.Return 2 peaks when notes 40 0 -41 0 41 42</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MusicalLoop.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.MusicalLoop</mutatedClass><mutatedMethod>isDescending</mutatedMethod><methodDescription>(III)Z</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>19</index><block>15</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MusicalLoop.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.MusicalLoop</mutatedClass><mutatedMethod>isDescending</mutatedMethod><methodDescription>(III)Z</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>29</index><block>17</block><killingTest>br.com.guifr.beecrowd.MusicalLoopTest.Return 2 peaks when notes 40 0 -41 0 41 42</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MusicalLoop.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.MusicalLoop</mutatedClass><mutatedMethod>isDescending</mutatedMethod><methodDescription>(III)Z</methodDescription><lineNumber>70</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>34</index><block>18</block><killingTest>br.com.guifr.beecrowd.MusicalLoopTest.Return 2 peaks when notes 40 0 -41 0 41 42</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MusicalLoop.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.MusicalLoop</mutatedClass><mutatedMethod>lambda$homManyPeaks$1</mutatedMethod><methodDescription>(Ljava/util/concurrent/atomic/AtomicInteger;[I)V</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>24</block><killingTest>br.com.guifr.beecrowd.MusicalLoopTest.Return 4 peaks when notes 300 450 449 450</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MusicalLoop.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.MusicalLoop</mutatedClass><mutatedMethod>lambda$homManyPeaks$1</mutatedMethod><methodDescription>(Ljava/util/concurrent/atomic/AtomicInteger;[I)V</methodDescription><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>25</block><killingTest>br.com.guifr.beecrowd.MusicalLoopTest.Return 4 peaks when notes 300 450 449 450</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MusicalLoop.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.MusicalLoop</mutatedClass><mutatedMethod>lambda$main$0</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>27</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MusicalLoop.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.MusicalLoop</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>1</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MusicalLoop.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.MusicalLoop</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>58</index><block>2</block><killingTest/><description>removed call to java/io/PrintStream::println</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>SelectionTestOne.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.SelectionTestOne</mutatedClass><mutatedMethod>isValid</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>9</block><killingTest>br.com.guifr.beecrowd.SelectionTestOneTest.Return &#39;True&#39; when values 2 3 2 6 is valid</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SelectionTestOne.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.SelectionTestOne</mutatedClass><mutatedMethod>isValid</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>10</block><killingTest>br.com.guifr.beecrowd.SelectionTestOneTest.Return &#39;True&#39; when values 2 3 2 6 is valid</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SelectionTestOne.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.SelectionTestOne</mutatedClass><mutatedMethod>isValid</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>11</block><killingTest>br.com.guifr.beecrowd.SelectionTestOneTest.Return &#39;True&#39; when values 2 3 2 6 is valid</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SelectionTestOne.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.SelectionTestOne</mutatedClass><mutatedMethod>isValid</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>12</block><killingTest>br.com.guifr.beecrowd.SelectionTestOneTest.Return &#39;True&#39; when values 2 3 2 6 is valid</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>SelectionTestOne.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.SelectionTestOne</mutatedClass><mutatedMethod>isValid</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>13</block><killingTest>br.com.guifr.beecrowd.SelectionTestOneTest.Return &#39;True&#39; when values 2 3 2 6 is valid</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SelectionTestOne.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.SelectionTestOne</mutatedClass><mutatedMethod>isValid</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>34</index><block>15</block><killingTest>br.com.guifr.beecrowd.SelectionTestOneTest.Return &#39;False&#39; when values 5 6 7 8 is invalid</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SelectionTestOne.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.SelectionTestOne</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>60</index><block>28</block><killingTest/><description>removed call to java/io/PrintStream::println</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SelectionTestOne.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.SelectionTestOne</mutatedClass><mutatedMethod>of</mutatedMethod><methodDescription>(IIII)Lbr/com/guifr/beecrowd/SelectionTestOne;</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>2</block><killingTest>br.com.guifr.beecrowd.SelectionTestOneTest.Return &#39;True&#39; when Rule 2 with values 2 3 2 6 is valid</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/SelectionTestOne::of to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SelectionTestOne.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.SelectionTestOne</mutatedClass><mutatedMethod>printIsValid</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>3</block><killingTest>br.com.guifr.beecrowd.SelectionTestOneTest.Return &#39;Valores aceitos&#39; when values 2 3 2 6 is valid</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SelectionTestOne.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.SelectionTestOne</mutatedClass><mutatedMethod>printIsValid</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>13</index><block>5</block><killingTest>br.com.guifr.beecrowd.SelectionTestOneTest.Return &#39;Valores aceitos&#39; when values 2 3 2 6 is valid</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/SelectionTestOne::printIsValid to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>SelectionTestOne.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.SelectionTestOne</mutatedClass><mutatedMethod>sumCDGreaterThanSumAB</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>13</index><block>19</block><killingTest>br.com.guifr.beecrowd.SelectionTestOneTest.Return false when is equal &#39;and if the sum of C and D is greater than the sum of A and B&#39;</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SelectionTestOne.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.SelectionTestOne</mutatedClass><mutatedMethod>sumCDGreaterThanSumAB</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>19</block><killingTest>br.com.guifr.beecrowd.SelectionTestOneTest.Return &#39;True&#39; when Rule 3 with values 2 3 2 6 is valid</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>SelectionTestOne.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.SelectionTestOne</mutatedClass><mutatedMethod>sumCDGreaterThanSumAB</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>19</block><killingTest>br.com.guifr.beecrowd.SelectionTestOneTest.Return false when is equal &#39;and if the sum of C and D is greater than the sum of A and B&#39;</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SelectionTestOne.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.SelectionTestOne</mutatedClass><mutatedMethod>sumCDGreaterThanSumAB</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>19</block><killingTest>br.com.guifr.beecrowd.SelectionTestOneTest.Return &#39;True&#39; when Rule 3 with values 2 3 2 6 is valid</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SelectionTestOne.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.SelectionTestOne</mutatedClass><mutatedMethod>sumCDGreaterThanSumAB</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>21</index><block>21</block><killingTest>br.com.guifr.beecrowd.SelectionTestOneTest.Return &#39;True&#39; when Rule 3 with values 2 3 2 6 is valid</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SelectionTestOne.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.SelectionTestOne</mutatedClass><mutatedMethod>valueAIsEven</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>6</index><block>25</block><killingTest>br.com.guifr.beecrowd.SelectionTestOneTest.Return &#39;True&#39; when Rule 5 with values 2 3 2 6 is valid</killingTest><description>Replaced integer modulus with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SelectionTestOne.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.SelectionTestOne</mutatedClass><mutatedMethod>valueAIsEven</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>25</block><killingTest>br.com.guifr.beecrowd.SelectionTestOneTest.Return &#39;True&#39; when Rule 5 with values 2 3 2 6 is valid</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SelectionTestOne.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.SelectionTestOne</mutatedClass><mutatedMethod>valueAIsEven</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>15</index><block>27</block><killingTest>br.com.guifr.beecrowd.SelectionTestOneTest.Return &#39;True&#39; when Rule 5 with values 2 3 2 6 is valid</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>SelectionTestOne.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.SelectionTestOne</mutatedClass><mutatedMethod>valueBGreaterThanC</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>7</index><block>6</block><killingTest>br.com.guifr.beecrowd.SelectionTestOneTest.Return &#39;False&#39; when equals if B is greater than C</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SelectionTestOne.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.SelectionTestOne</mutatedClass><mutatedMethod>valueBGreaterThanC</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>6</block><killingTest>br.com.guifr.beecrowd.SelectionTestOneTest.Return &#39;False&#39; if B is greater than C</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SelectionTestOne.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.SelectionTestOne</mutatedClass><mutatedMethod>valueBGreaterThanC</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>15</index><block>8</block><killingTest>br.com.guifr.beecrowd.SelectionTestOneTest.Return &#39;False&#39; if B is greater than C</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>SelectionTestOne.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.SelectionTestOne</mutatedClass><mutatedMethod>valueDGreaterThanA</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>7</index><block>16</block><killingTest>br.com.guifr.beecrowd.SelectionTestOneTest.Return False when is equal &#39;and D is greater than A&#39;</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SelectionTestOne.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.SelectionTestOne</mutatedClass><mutatedMethod>valueDGreaterThanA</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>16</block><killingTest>br.com.guifr.beecrowd.SelectionTestOneTest.Return &#39;True&#39; when Rule 2 with values 2 3 2 6 is valid</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SelectionTestOne.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.SelectionTestOne</mutatedClass><mutatedMethod>valueDGreaterThanA</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>15</index><block>18</block><killingTest>br.com.guifr.beecrowd.SelectionTestOneTest.Return &#39;True&#39; when Rule 2 with values 2 3 2 6 is valid</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>SelectionTestOne.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.SelectionTestOne</mutatedClass><mutatedMethod>valuesCDIsPositive</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>52</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>8</index><block>22</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SelectionTestOne.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.SelectionTestOne</mutatedClass><mutatedMethod>valuesCDIsPositive</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>52</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>22</block><killingTest>br.com.guifr.beecrowd.SelectionTestOneTest.Return true &#39;if C and D were positives values&#39;</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SelectionTestOne.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.SelectionTestOne</mutatedClass><mutatedMethod>valuesCDIsPositive</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>52</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><block>24</block><killingTest>br.com.guifr.beecrowd.SelectionTestOneTest.Return true &#39;if C and D were positives values&#39;</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SherlockAnagrams.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.SherlockAnagrams</mutatedClass><mutatedMethod>comparing</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>38</index><block>9</block><killingTest>br.com.guifr.hackerrank.SherlockAnagramsTest.Return false when comparing &#39;acc&#39; with &#39;bca&#39;</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>SherlockAnagrams.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.SherlockAnagrams</mutatedClass><mutatedMethod>comparing</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><block>9</block><killingTest>br.com.guifr.hackerrank.SherlockAnagramsTest.Return 5 when search anagrams in s=&#39;cdcd&#39;</killingTest><description>removed call to java/util/Arrays::sort</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>SherlockAnagrams.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.SherlockAnagrams</mutatedClass><mutatedMethod>comparing</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>25</index><block>9</block><killingTest>br.com.guifr.hackerrank.SherlockAnagramsTest.Return true when comparing &#39;abc&#39; with &#39;bca&#39;</killingTest><description>removed call to java/util/Arrays::sort</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>SherlockAnagrams.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.SherlockAnagrams</mutatedClass><mutatedMethod>search</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>13</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>20</index><block>1</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SherlockAnagrams.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.SherlockAnagrams</mutatedClass><mutatedMethod>search</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>56</index><block>3</block><killingTest>br.com.guifr.hackerrank.SherlockAnagramsTest.Return 10 when search anagrams in s=&#39;kkkk&#39;</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SherlockAnagrams.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.SherlockAnagrams</mutatedClass><mutatedMethod>search</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>74</index><block>5</block><killingTest>br.com.guifr.hackerrank.SherlockAnagramsTest.Return 10 when search anagrams in s=&#39;kkkk&#39;</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SherlockAnagrams.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.SherlockAnagrams</mutatedClass><mutatedMethod>search</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>78</index><block>5</block><killingTest>br.com.guifr.hackerrank.SherlockAnagramsTest.Return 10 when search anagrams in s=&#39;kkkk&#39;</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SherlockAnagrams.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.SherlockAnagrams</mutatedClass><mutatedMethod>search</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>83</index><block>6</block><killingTest>br.com.guifr.hackerrank.SherlockAnagramsTest.Return 10 when search anagrams in s=&#39;kkkk&#39;</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SherlockAnagrams.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.SherlockAnagrams</mutatedClass><mutatedMethod>search</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>13</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>90</index><block>7</block><killingTest>br.com.guifr.hackerrank.SherlockAnagramsTest.Return 10 when search anagrams in s=&#39;kkkk&#39;</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SherlockAnagrams.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.SherlockAnagrams</mutatedClass><mutatedMethod>search</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>13</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>19</index><block>1</block><killingTest>br.com.guifr.hackerrank.SherlockAnagramsTest.Return 10 when search anagrams in s=&#39;kkkk&#39;</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SherlockAnagrams.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.SherlockAnagrams</mutatedClass><mutatedMethod>search</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><block>2</block><killingTest>br.com.guifr.hackerrank.SherlockAnagramsTest.Return 10 when search anagrams in s=&#39;kkkk&#39;</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SherlockAnagrams.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.SherlockAnagrams</mutatedClass><mutatedMethod>search</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>40</index><block>3</block><killingTest>br.com.guifr.hackerrank.SherlockAnagramsTest.Return 10 when search anagrams in s=&#39;kkkk&#39;</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SherlockAnagrams.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.SherlockAnagrams</mutatedClass><mutatedMethod>search</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>47</index><block>3</block><killingTest>br.com.guifr.hackerrank.SherlockAnagramsTest.Return 10 when search anagrams in s=&#39;kkkk&#39;</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SherlockAnagrams.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.SherlockAnagrams</mutatedClass><mutatedMethod>search</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>53</index><block>3</block><killingTest>br.com.guifr.hackerrank.SherlockAnagramsTest.Return 10 when search anagrams in s=&#39;kkkk&#39;</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SherlockAnagrams.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.SherlockAnagrams</mutatedClass><mutatedMethod>search</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>63</index><block>4</block><killingTest>br.com.guifr.hackerrank.SherlockAnagramsTest.Return 10 when search anagrams in s=&#39;kkkk&#39;</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SherlockAnagrams.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.SherlockAnagrams</mutatedClass><mutatedMethod>search</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>13</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>1</block><killingTest>br.com.guifr.hackerrank.SherlockAnagramsTest.Return 10 when search anagrams in s=&#39;kkkk&#39;</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SherlockAnagrams.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.SherlockAnagrams</mutatedClass><mutatedMethod>search</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>33</index><block>2</block><killingTest>br.com.guifr.hackerrank.SherlockAnagramsTest.Return 10 when search anagrams in s=&#39;kkkk&#39;</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SherlockAnagrams.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.SherlockAnagrams</mutatedClass><mutatedMethod>search</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>56</index><block>3</block><killingTest>br.com.guifr.hackerrank.SherlockAnagramsTest.Return 10 when search anagrams in s=&#39;kkkk&#39;</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SherlockAnagrams.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.SherlockAnagrams</mutatedClass><mutatedMethod>search</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>19</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>71</index><block>4</block><killingTest>br.com.guifr.hackerrank.SherlockAnagramsTest.Return 10 when search anagrams in s=&#39;kkkk&#39;</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SherlockAnagrams.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.SherlockAnagrams</mutatedClass><mutatedMethod>search</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>96</index><block>8</block><killingTest>br.com.guifr.hackerrank.SherlockAnagramsTest.Return 10 when search anagrams in s=&#39;kkkk&#39;</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>BhaskarasFormula.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.BhaskarasFormula</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>45</index><block>1</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BhaskarasFormula.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.BhaskarasFormula</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><block>1</block><killingTest>br.com.guifr.beecrowd.BhaskarasFormulaTest.Return r1 = -0.29788 and r2 = -1.71212 when calculate form with 10.0 20.1 5.1</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BhaskarasFormula.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.BhaskarasFormula</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>32</index><block>1</block><killingTest>br.com.guifr.beecrowd.BhaskarasFormulaTest.Return r1 = -0.29788 and r2 = -1.71212 when calculate form with 10.0 20.1 5.1</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BhaskarasFormula.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.BhaskarasFormula</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>38</index><block>1</block><killingTest>br.com.guifr.beecrowd.BhaskarasFormulaTest.Return r1 = -0.29788 and r2 = -1.71212 when calculate form with 10.0 20.1 5.1</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BhaskarasFormula.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.BhaskarasFormula</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>65</index><block>3</block><killingTest>br.com.guifr.beecrowd.BhaskarasFormulaTest.Return exception because &#39;division by zero&#39; with &#39;Impossivel calcular&#39; when calculate form with 0.0 20.0 5.0</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BhaskarasFormula.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.BhaskarasFormula</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>45</index><block>1</block><killingTest>br.com.guifr.beecrowd.BhaskarasFormulaTest.Return r1 = -0.29788 and r2 = -1.71212 when calculate form with 10.0 20.1 5.1</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BhaskarasFormula.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.BhaskarasFormula</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>31</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>72</index><block>3</block><killingTest>br.com.guifr.beecrowd.BhaskarasFormulaTest.Return r1 = -0.29788 and r2 = -1.71212 when calculate form with 10.0 20.1 5.1</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BhaskarasFormula.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.BhaskarasFormula</mutatedClass><mutatedMethod>getR1</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>5</index><block>7</block><killingTest>br.com.guifr.beecrowd.BhaskarasFormulaTest.Return r1 = -0.29788 and r2 = -1.71212 when calculate form with 10.0 20.1 5.1</killingTest><description>removed negation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BhaskarasFormula.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.BhaskarasFormula</mutatedClass><mutatedMethod>getR1</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>7</block><killingTest>br.com.guifr.beecrowd.BhaskarasFormulaTest.Return r1 = -0.29788 and r2 = -1.71212 when calculate form with 10.0 20.1 5.1</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BhaskarasFormula.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.BhaskarasFormula</mutatedClass><mutatedMethod>getR1</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>7</block><killingTest>br.com.guifr.beecrowd.BhaskarasFormulaTest.Return r1 = -0.29788 and r2 = -1.71212 when calculate form with 10.0 20.1 5.1</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BhaskarasFormula.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.BhaskarasFormula</mutatedClass><mutatedMethod>getR1</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><block>7</block><killingTest>br.com.guifr.beecrowd.BhaskarasFormulaTest.Return r1 = -0.29788 and r2 = -1.71212 when calculate form with 10.0 20.1 5.1</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BhaskarasFormula.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.BhaskarasFormula</mutatedClass><mutatedMethod>getR1</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>7</block><killingTest>br.com.guifr.beecrowd.BhaskarasFormulaTest.Return r1 = -0.29788 and r2 = -1.71212 when calculate form with 10.0 20.1 5.1</killingTest><description>replaced return of double value with -(x + 1) for br/com/guifr/beecrowd/BhaskarasFormula::getR1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BhaskarasFormula.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.BhaskarasFormula</mutatedClass><mutatedMethod>getR2</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>5</index><block>8</block><killingTest>br.com.guifr.beecrowd.BhaskarasFormulaTest.Return r1 = -0.29788 and r2 = -1.71212 when calculate form with 10.0 20.1 5.1</killingTest><description>removed negation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BhaskarasFormula.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.BhaskarasFormula</mutatedClass><mutatedMethod>getR2</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>8</block><killingTest>br.com.guifr.beecrowd.BhaskarasFormulaTest.Return r1 = -0.29788 and r2 = -1.71212 when calculate form with 10.0 20.1 5.1</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BhaskarasFormula.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.BhaskarasFormula</mutatedClass><mutatedMethod>getR2</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>8</block><killingTest>br.com.guifr.beecrowd.BhaskarasFormulaTest.Return r1 = -0.29788 and r2 = -1.71212 when calculate form with 10.0 20.1 5.1</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BhaskarasFormula.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.BhaskarasFormula</mutatedClass><mutatedMethod>getR2</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><block>8</block><killingTest>br.com.guifr.beecrowd.BhaskarasFormulaTest.Return r1 = -0.29788 and r2 = -1.71212 when calculate form with 10.0 20.1 5.1</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BhaskarasFormula.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.BhaskarasFormula</mutatedClass><mutatedMethod>getR2</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>8</block><killingTest>br.com.guifr.beecrowd.BhaskarasFormulaTest.Return r1 = -0.29788 and r2 = -1.71212 when calculate form with 10.0 20.1 5.1</killingTest><description>replaced return of double value with -(x + 1) for br/com/guifr/beecrowd/BhaskarasFormula::getR2</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BhaskarasFormula.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.BhaskarasFormula</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>69</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>86</index><block>10</block><killingTest/><description>removed call to java/io/PrintStream::println</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BhaskarasFormula.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.BhaskarasFormula</mutatedClass><mutatedMethod>of</mutatedMethod><methodDescription>(DDD)Lbr/com/guifr/beecrowd/BhaskarasFormula;</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>6</block><killingTest>br.com.guifr.beecrowd.BhaskarasFormulaTest.Return r1 = -0.29788 and r2 = -1.71212 when calculate form with 10.0 20.1 5.1</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/BhaskarasFormula::of to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>PowerCrisis.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.PowerCrisis</mutatedClass><mutatedMethod>initialCities</mutatedMethod><methodDescription>(I)Lbr/com/guifr/beecrowd/PowerCrisis$City;</methodDescription><lineNumber>55</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>24</index><block>14</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>PowerCrisis.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.PowerCrisis</mutatedClass><mutatedMethod>initialCities</mutatedMethod><methodDescription>(I)Lbr/com/guifr/beecrowd/PowerCrisis$City;</methodDescription><lineNumber>55</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>48</index><block>15</block><killingTest/><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>PowerCrisis.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.PowerCrisis</mutatedClass><mutatedMethod>initialCities</mutatedMethod><methodDescription>(I)Lbr/com/guifr/beecrowd/PowerCrisis$City;</methodDescription><lineNumber>55</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>14</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PowerCrisis.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.PowerCrisis</mutatedClass><mutatedMethod>initialCities</mutatedMethod><methodDescription>(I)Lbr/com/guifr/beecrowd/PowerCrisis$City;</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>64</index><block>16</block><killingTest>br.com.guifr.beecrowd.PowerCrisisTest.Return minimum m=1 when N=13</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/PowerCrisis::initialCities to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PowerCrisis.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.PowerCrisis</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>11</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>1</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PowerCrisis.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.PowerCrisis</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>12</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>23</index><block>2</block><killingTest/><description>removed call to java/io/PrintStream::println</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>PowerCrisis.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.PowerCrisis</mutatedClass><mutatedMethod>minimumRandomOf</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>33</index><block>5</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PowerCrisis.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.PowerCrisis</mutatedClass><mutatedMethod>minimumRandomOf</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>64</index><block>9</block><killingTest>br.com.guifr.beecrowd.PowerCrisisTest.Return minimum m=1 when N=13</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>PowerCrisis.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.PowerCrisis</mutatedClass><mutatedMethod>minimumRandomOf</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>63</index><block>9</block><killingTest/><description>Changed increment from -1 to 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>PowerCrisis.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.PowerCrisis</mutatedClass><mutatedMethod>minimumRandomOf</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>74</index><block>11</block><killingTest/><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>PowerCrisis.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.PowerCrisis</mutatedClass><mutatedMethod>minimumRandomOf</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>79</index><block>12</block><killingTest/><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PowerCrisis.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.PowerCrisis</mutatedClass><mutatedMethod>minimumRandomOf</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>4</block><killingTest>br.com.guifr.beecrowd.PowerCrisisTest.Return minimum m=1 when N=13</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>PowerCrisis.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.PowerCrisis</mutatedClass><mutatedMethod>minimumRandomOf</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>33</index><block>5</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>PowerCrisis.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.PowerCrisis</mutatedClass><mutatedMethod>minimumRandomOf</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>6</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PowerCrisis.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.PowerCrisis</mutatedClass><mutatedMethod>minimumRandomOf</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>7</block><killingTest>br.com.guifr.beecrowd.PowerCrisisTest.Return minimum m=1 when N=13</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>PowerCrisis.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.PowerCrisis</mutatedClass><mutatedMethod>minimumRandomOf</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>64</index><block>9</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PowerCrisis.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.PowerCrisis</mutatedClass><mutatedMethod>minimumRandomOf</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>85</index><block>13</block><killingTest>br.com.guifr.beecrowd.PowerCrisisTest.Return minimum m=1 when N=13</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>PowerCrisis.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.PowerCrisis</mutatedClass><mutatedMethod>minimumRandomOf</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>54</index><block>9</block><killingTest/><description>removed call to br/com/guifr/beecrowd/PowerCrisis$City::blacked</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>SortingBubbleSort.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.SortingBubbleSort</mutatedClass><mutatedMethod>of</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/List;</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>24</index><block>2</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SortingBubbleSort.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.SortingBubbleSort</mutatedClass><mutatedMethod>of</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/List;</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>35</index><block>3</block><killingTest>br.com.guifr.hackerrank.SortingBubbleSortTest.Return [0,1,3] When count swap With [1,2,3]</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>SortingBubbleSort.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.SortingBubbleSort</mutatedClass><mutatedMethod>of</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/List;</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>50</index><block>4</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SortingBubbleSort.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.SortingBubbleSort</mutatedClass><mutatedMethod>of</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/List;</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>80</index><block>5</block><killingTest>br.com.guifr.hackerrank.SortingBubbleSortTest.Return [3,1,3] When count swap With [3,2,1]</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SortingBubbleSort.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.SortingBubbleSort</mutatedClass><mutatedMethod>of</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/List;</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>84</index><block>5</block><killingTest>br.com.guifr.hackerrank.SortingBubbleSortTest.Return [0,1,3] When count swap With [1,2,3]</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>SortingBubbleSort.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.SortingBubbleSort</mutatedClass><mutatedMethod>of</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/List;</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>89</index><block>6</block><killingTest/><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SortingBubbleSort.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.SortingBubbleSort</mutatedClass><mutatedMethod>of</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/List;</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>34</index><block>3</block><killingTest>br.com.guifr.hackerrank.SortingBubbleSortTest.Return [0,1,3] When count swap With [1,2,3]</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SortingBubbleSort.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.SortingBubbleSort</mutatedClass><mutatedMethod>of</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/List;</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>46</index><block>4</block><killingTest>br.com.guifr.hackerrank.SortingBubbleSortTest.Return [0,1,3] When count swap With [1,2,3]</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SortingBubbleSort.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.SortingBubbleSort</mutatedClass><mutatedMethod>of</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/List;</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>65</index><block>5</block><killingTest>br.com.guifr.hackerrank.SortingBubbleSortTest.Return [3,1,3] When count swap With [3,2,1]</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SortingBubbleSort.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.SortingBubbleSort</mutatedClass><mutatedMethod>of</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/List;</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>74</index><block>5</block><killingTest>br.com.guifr.hackerrank.SortingBubbleSortTest.Return [3,1,3] When count swap With [3,2,1]</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SortingBubbleSort.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.SortingBubbleSort</mutatedClass><mutatedMethod>of</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/List;</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>114</index><block>7</block><killingTest>br.com.guifr.hackerrank.SortingBubbleSortTest.Return [0,1,3] When count swap With [1,2,3]</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>SortingBubbleSort.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.SortingBubbleSort</mutatedClass><mutatedMethod>of</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/List;</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>2</block><killingTest>br.com.guifr.hackerrank.SortingBubbleSortTest.Return [3,1,3] When count swap With [3,2,1]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>SortingBubbleSort.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.SortingBubbleSort</mutatedClass><mutatedMethod>of</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/List;</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><block>3</block><killingTest>br.com.guifr.hackerrank.SortingBubbleSortTest.Return [3,1,3] When count swap With [3,2,1]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SortingBubbleSort.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.SortingBubbleSort</mutatedClass><mutatedMethod>of</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/List;</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>50</index><block>4</block><killingTest>br.com.guifr.hackerrank.SortingBubbleSortTest.Return [0,1,3] When count swap With [1,2,3]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SortingBubbleSort.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.SortingBubbleSort</mutatedClass><mutatedMethod>of</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/List;</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>121</index><block>7</block><killingTest>br.com.guifr.hackerrank.SortingBubbleSortTest.Return [0,1,3] When count swap With [1,2,3]</killingTest><description>mutated return of Object value for br/com/guifr/hackerrank/SortingBubbleSort::of to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SortingBubbleSort.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.SortingBubbleSort</mutatedClass><mutatedMethod>printResult</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/lang/String;</methodDescription><lineNumber>10</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>29</index><block>1</block><killingTest>br.com.guifr.hackerrank.SortingBubbleSortTest.Return prints When passed parameters about swaps, and elements With [0,1,3]</killingTest><description>mutated return of Object value for br/com/guifr/hackerrank/SortingBubbleSort::printResult to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AlarmClock.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.AlarmClock</mutatedClass><mutatedMethod>differenceInMinutes</mutatedMethod><methodDescription>(Ljava/util/Date;Ljava/util/Date;)I</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>15</index><block>6</block><killingTest>br.com.guifr.beecrowd.AlarmClockTest.Return &#39;35&#39; when times is &#39;23 59 0 34&#39;</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AlarmClock.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.AlarmClock</mutatedClass><mutatedMethod>differenceInMinutes</mutatedMethod><methodDescription>(Ljava/util/Date;Ljava/util/Date;)I</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><block>6</block><killingTest>br.com.guifr.beecrowd.AlarmClockTest.Return &#39;35&#39; when times is &#39;23 59 0 34&#39;</killingTest><description>Replaced long division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AlarmClock.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.AlarmClock</mutatedClass><mutatedMethod>differenceInMinutes</mutatedMethod><methodDescription>(Ljava/util/Date;Ljava/util/Date;)I</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><block>6</block><killingTest>br.com.guifr.beecrowd.AlarmClockTest.Return &#39;35&#39; when times is &#39;23 59 0 34&#39;</killingTest><description>Replaced long division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AlarmClock.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.AlarmClock</mutatedClass><mutatedMethod>differenceInMinutes</mutatedMethod><methodDescription>(Ljava/util/Date;Ljava/util/Date;)I</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>27</index><block>6</block><killingTest>br.com.guifr.beecrowd.AlarmClockTest.Return &#39;35&#39; when times is &#39;23 59 0 34&#39;</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AlarmClock.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.AlarmClock</mutatedClass><mutatedMethod>getFormat</mutatedMethod><methodDescription>(II)Ljava/lang/String;</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>13</block><killingTest>br.com.guifr.beecrowd.AlarmClockTest.Return &#39;35&#39; when times is &#39;23 59 0 34&#39;</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/AlarmClock::getFormat to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AlarmClock.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.AlarmClock</mutatedClass><mutatedMethod>getTime</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/util/Date;</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>31</index><block>12</block><killingTest>br.com.guifr.beecrowd.AlarmClockTest.Return &#39;35&#39; when times is &#39;23 59 0 34&#39;</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/AlarmClock::getTime to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>AlarmClock.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.AlarmClock</mutatedClass><mutatedMethod>isNextDay</mutatedMethod><methodDescription>(Ljava/util/Date;Ljava/util/Date;)Z</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>8</index><block>8</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AlarmClock.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.AlarmClock</mutatedClass><mutatedMethod>isNextDay</mutatedMethod><methodDescription>(Ljava/util/Date;Ljava/util/Date;)Z</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>8</block><killingTest>br.com.guifr.beecrowd.AlarmClockTest.Return &#39;35&#39; when times is &#39;23 59 0 34&#39;</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AlarmClock.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.AlarmClock</mutatedClass><mutatedMethod>isNextDay</mutatedMethod><methodDescription>(Ljava/util/Date;Ljava/util/Date;)Z</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><block>10</block><killingTest>br.com.guifr.beecrowd.AlarmClockTest.Return &#39;35&#39; when times is &#39;23 59 0 34&#39;</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AlarmClock.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.AlarmClock</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>1</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AlarmClock.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.AlarmClock</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>66</index><block>2</block><killingTest/><description>removed call to java/io/PrintStream::println</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AlarmClock.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.AlarmClock</mutatedClass><mutatedMethod>plusDays</mutatedMethod><methodDescription>(Ljava/util/Date;I)Ljava/util/Date;</methodDescription><lineNumber>52</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>24</index><block>7</block><killingTest>br.com.guifr.beecrowd.AlarmClockTest.Return &#39;35&#39; when times is &#39;23 59 0 34&#39;</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/AlarmClock::plusDays to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AlarmClock.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.AlarmClock</mutatedClass><mutatedMethod>plusDays</mutatedMethod><methodDescription>(Ljava/util/Date;I)Ljava/util/Date;</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><block>7</block><killingTest>br.com.guifr.beecrowd.AlarmClockTest.Return &#39;35&#39; when times is &#39;23 59 0 34&#39;</killingTest><description>removed call to java/util/Calendar::setTime</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AlarmClock.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.AlarmClock</mutatedClass><mutatedMethod>plusDays</mutatedMethod><methodDescription>(Ljava/util/Date;I)Ljava/util/Date;</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>7</block><killingTest>br.com.guifr.beecrowd.AlarmClockTest.Return &#39;35&#39; when times is &#39;23 59 0 34&#39;</killingTest><description>removed call to java/util/Calendar::add</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AlarmClock.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.AlarmClock</mutatedClass><mutatedMethod>startAndEnd</mutatedMethod><methodDescription>(IIII)I</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>4</block><killingTest>br.com.guifr.beecrowd.AlarmClockTest.Return &#39;35&#39; when times is &#39;23 59 0 34&#39;</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AlarmClock.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.AlarmClock</mutatedClass><mutatedMethod>startAndEnd</mutatedMethod><methodDescription>(IIII)I</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>33</index><block>5</block><killingTest>br.com.guifr.beecrowd.AlarmClockTest.Return &#39;35&#39; when times is &#39;23 59 0 34&#39;</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NewYearChaos.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.NewYearChaos</mutatedClass><mutatedMethod>howManyBribes</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>19</index><block>2</block><killingTest>br.com.guifr.hackerrank.NewYearChaosTest.Return &#39;4&#39; when people bribes other with queue 2 1 5 4 3</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NewYearChaos.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.NewYearChaos</mutatedClass><mutatedMethod>howManyBribes</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>45</index><block>3</block><killingTest>br.com.guifr.hackerrank.NewYearChaosTest.Return &#39;4&#39; when people bribes other with queue 2 1 5 4 3</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>NewYearChaos.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.NewYearChaos</mutatedClass><mutatedMethod>howManyBribes</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>55</index><block>4</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NewYearChaos.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.NewYearChaos</mutatedClass><mutatedMethod>howManyBribes</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>63</index><block>5</block><killingTest>br.com.guifr.hackerrank.NewYearChaosTest.Return &#39;4&#39; when people bribes other with queue 2 1 5 4 3</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NewYearChaos.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.NewYearChaos</mutatedClass><mutatedMethod>howManyBribes</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>58</index><block>5</block><killingTest>br.com.guifr.hackerrank.NewYearChaosTest.Return &#39;4&#39; when people bribes other with queue 2 1 5 4 3</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NewYearChaos.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.NewYearChaos</mutatedClass><mutatedMethod>howManyBribes</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>82</index><block>8</block><killingTest>br.com.guifr.hackerrank.NewYearChaosTest.Return &#39;4&#39; when people bribes other with queue 2 1 5 4 3</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NewYearChaos.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.NewYearChaos</mutatedClass><mutatedMethod>howManyBribes</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>37</index><block>3</block><killingTest>br.com.guifr.hackerrank.NewYearChaosTest.Return &#39;4&#39; when people bribes other with queue 2 1 5 4 3</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NewYearChaos.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.NewYearChaos</mutatedClass><mutatedMethod>howManyBribes</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>78</index><block>8</block><killingTest>br.com.guifr.hackerrank.NewYearChaosTest.Return &#39;4&#39; when people bribes other with queue 2 1 5 4 3</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NewYearChaos.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.NewYearChaos</mutatedClass><mutatedMethod>howManyBribes</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>2</block><killingTest>br.com.guifr.hackerrank.NewYearChaosTest.Return &#39;4&#39; when people bribes other with queue 2 1 5 4 3</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NewYearChaos.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.NewYearChaos</mutatedClass><mutatedMethod>howManyBribes</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>45</index><block>3</block><killingTest>br.com.guifr.hackerrank.NewYearChaosTest.Return &#39;4&#39; when people bribes other with queue 2 1 5 4 3</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NewYearChaos.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.NewYearChaos</mutatedClass><mutatedMethod>howManyBribes</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>55</index><block>4</block><killingTest>br.com.guifr.hackerrank.NewYearChaosTest.Return &#39;4&#39; when people bribes other with queue 2 1 5 4 3</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NewYearChaos.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.NewYearChaos</mutatedClass><mutatedMethod>howManyBribes</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>63</index><block>5</block><killingTest>br.com.guifr.hackerrank.NewYearChaosTest.Return &#39;4&#39; when people bribes other with queue 2 1 5 4 3</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NewYearChaos.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.NewYearChaos</mutatedClass><mutatedMethod>howManyBribes</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>67</index><block>6</block><killingTest>br.com.guifr.hackerrank.NewYearChaosTest.Return &#39;Too chaotic&#39; when people bribes other with queue 4 1 2 3</killingTest><description>mutated return of Object value for br/com/guifr/hackerrank/NewYearChaos::howManyBribes to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NewYearChaos.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.NewYearChaos</mutatedClass><mutatedMethod>howManyBribes</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>89</index><block>9</block><killingTest>br.com.guifr.hackerrank.NewYearChaosTest.Return &#39;4&#39; when people bribes other with queue 2 1 5 4 3</killingTest><description>mutated return of Object value for br/com/guifr/hackerrank/NewYearChaos::howManyBribes to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NewYearChaos.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.NewYearChaos</mutatedClass><mutatedMethod>queue</mutatedMethod><methodDescription>(Ljava/util/List;)Lbr/com/guifr/hackerrank/NewYearChaos;</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>1</block><killingTest>br.com.guifr.hackerrank.NewYearChaosTest.Return &#39;4&#39; when people bribes other with queue 2 1 5 4 3</killingTest><description>mutated return of Object value for br/com/guifr/hackerrank/NewYearChaos::queue to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinimumSwaps2.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.MinimumSwaps2</mutatedClass><mutatedMethod>swapAscendingOrder</mutatedMethod><methodDescription>([I)I</methodDescription><lineNumber>8</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>14</index><block>1</block><killingTest>br.com.guifr.hackerrank.MinimumSwaps2Test.Return 3 when count swap for put ascending order array 2 3 4 1 5</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>MinimumSwaps2.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.MinimumSwaps2</mutatedClass><mutatedMethod>swapAscendingOrder</mutatedMethod><methodDescription>([I)I</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>47</index><block>4</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>MinimumSwaps2.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.MinimumSwaps2</mutatedClass><mutatedMethod>swapAscendingOrder</mutatedMethod><methodDescription>([I)I</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>76</index><block>8</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinimumSwaps2.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.MinimumSwaps2</mutatedClass><mutatedMethod>swapAscendingOrder</mutatedMethod><methodDescription>([I)I</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>59</index><block>6</block><killingTest>br.com.guifr.hackerrank.MinimumSwaps2Test.Return 3 when count swap for put ascending order array 2 3 4 1 5</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinimumSwaps2.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.MinimumSwaps2</mutatedClass><mutatedMethod>swapAscendingOrder</mutatedMethod><methodDescription>([I)I</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>70</index><block>7</block><killingTest>br.com.guifr.hackerrank.MinimumSwaps2Test.Return 3 when count swap for put ascending order array 2 3 4 1 5</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinimumSwaps2.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.MinimumSwaps2</mutatedClass><mutatedMethod>swapAscendingOrder</mutatedMethod><methodDescription>([I)I</methodDescription><lineNumber>8</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>100</index><block>9</block><killingTest>br.com.guifr.hackerrank.MinimumSwaps2Test.Return 3 when count swap for put ascending order array 2 3 4 1 5</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>MinimumSwaps2.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.MinimumSwaps2</mutatedClass><mutatedMethod>swapAscendingOrder</mutatedMethod><methodDescription>([I)I</methodDescription><lineNumber>11</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><block>2</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinimumSwaps2.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.MinimumSwaps2</mutatedClass><mutatedMethod>swapAscendingOrder</mutatedMethod><methodDescription>([I)I</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>40</index><block>4</block><killingTest>br.com.guifr.hackerrank.MinimumSwaps2Test.Return 3 when count swap for put ascending order array 2 3 4 1 5</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinimumSwaps2.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.MinimumSwaps2</mutatedClass><mutatedMethod>swapAscendingOrder</mutatedMethod><methodDescription>([I)I</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>55</index><block>5</block><killingTest>br.com.guifr.hackerrank.MinimumSwaps2Test.Return 3 when count swap for put ascending order array 2 3 4 1 5</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinimumSwaps2.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.MinimumSwaps2</mutatedClass><mutatedMethod>swapAscendingOrder</mutatedMethod><methodDescription>([I)I</methodDescription><lineNumber>8</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>1</block><killingTest>br.com.guifr.hackerrank.MinimumSwaps2Test.Return 3 when count swap for put ascending order array 2 3 4 1 5</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinimumSwaps2.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.MinimumSwaps2</mutatedClass><mutatedMethod>swapAscendingOrder</mutatedMethod><methodDescription>([I)I</methodDescription><lineNumber>11</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>2</block><killingTest>br.com.guifr.hackerrank.MinimumSwaps2Test.Return 3 when count swap for put ascending order array 2 3 4 1 5</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinimumSwaps2.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.MinimumSwaps2</mutatedClass><mutatedMethod>swapAscendingOrder</mutatedMethod><methodDescription>([I)I</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>47</index><block>4</block><killingTest>br.com.guifr.hackerrank.MinimumSwaps2Test.Return 3 when count swap for put ascending order array 2 3 4 1 5</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinimumSwaps2.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.MinimumSwaps2</mutatedClass><mutatedMethod>swapAscendingOrder</mutatedMethod><methodDescription>([I)I</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>56</index><block>5</block><killingTest>br.com.guifr.hackerrank.MinimumSwaps2Test.Return 3 when count swap for put ascending order array 2 3 4 1 5</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinimumSwaps2.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.MinimumSwaps2</mutatedClass><mutatedMethod>swapAscendingOrder</mutatedMethod><methodDescription>([I)I</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>76</index><block>8</block><killingTest>br.com.guifr.hackerrank.MinimumSwaps2Test.Return 3 when count swap for put ascending order array 2 3 4 1 5</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MinimumSwaps2.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.MinimumSwaps2</mutatedClass><mutatedMethod>swapAscendingOrder</mutatedMethod><methodDescription>([I)I</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>106</index><block>10</block><killingTest>br.com.guifr.hackerrank.MinimumSwaps2Test.Return 3 when count swap for put ascending order array 2 3 4 1 5</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>JumpingClouds.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.JumpingClouds</mutatedClass><mutatedMethod>jumpingOnClouds</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>9</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>16</index><block>1</block><killingTest>br.com.guifr.hackerrank.JumpingCloudsTest.Return 1 when the clouds is 0 0</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>JumpingClouds.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.JumpingClouds</mutatedClass><mutatedMethod>jumpingOnClouds</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>10</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>24</index><block>2</block><killingTest>br.com.guifr.hackerrank.JumpingCloudsTest.Return 1 when the clouds is 0 0</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>JumpingClouds.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.JumpingClouds</mutatedClass><mutatedMethod>jumpingOnClouds</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>12</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>37</index><block>4</block><killingTest/><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>JumpingClouds.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.JumpingClouds</mutatedClass><mutatedMethod>jumpingOnClouds</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>41</index><block>4</block><killingTest>br.com.guifr.hackerrank.JumpingCloudsTest.Return 1 when the clouds is 0 0</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>JumpingClouds.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.JumpingClouds</mutatedClass><mutatedMethod>jumpingOnClouds</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>9</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>44</index><block>4</block><killingTest/><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>JumpingClouds.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.JumpingClouds</mutatedClass><mutatedMethod>jumpingOnClouds</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>9</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>15</index><block>1</block><killingTest>br.com.guifr.hackerrank.JumpingCloudsTest.Return 1 when the clouds is 0 0</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>JumpingClouds.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.JumpingClouds</mutatedClass><mutatedMethod>jumpingOnClouds</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>10</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>2</block><killingTest>br.com.guifr.hackerrank.JumpingCloudsTest.Return 1 when the clouds is 0 0</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>JumpingClouds.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.JumpingClouds</mutatedClass><mutatedMethod>jumpingOnClouds</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>11</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><block>3</block><killingTest>br.com.guifr.hackerrank.JumpingCloudsTest.Return 3 when the clouds is 0 0 1 0 0</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>JumpingClouds.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.JumpingClouds</mutatedClass><mutatedMethod>jumpingOnClouds</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>9</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>1</block><killingTest>br.com.guifr.hackerrank.JumpingCloudsTest.Return 1 when the clouds is 0 0</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>JumpingClouds.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.JumpingClouds</mutatedClass><mutatedMethod>jumpingOnClouds</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>10</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>2</block><killingTest>br.com.guifr.hackerrank.JumpingCloudsTest.Return 1 when the clouds is 0 0</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>JumpingClouds.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.JumpingClouds</mutatedClass><mutatedMethod>jumpingOnClouds</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>11</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>3</block><killingTest>br.com.guifr.hackerrank.JumpingCloudsTest.Return 3 when the clouds is 0 0 0 0 1 0</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>JumpingClouds.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.JumpingClouds</mutatedClass><mutatedMethod>jumpingOnClouds</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>50</index><block>5</block><killingTest>br.com.guifr.hackerrank.JumpingCloudsTest.Return 1 when the clouds is 0 0</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Interval.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Interval</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>31</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>16</index><block>7</block><killingTest/><description>removed call to java/io/PrintStream::println</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>Interval.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Interval</mutatedClass><mutatedMethod>printWith</mutatedMethod><methodDescription>(D)Ljava/lang/String;</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>1</block><killingTest>br.com.guifr.beecrowd.IntervalTest.Return &#39;Intervalo [0,25]&#39; when value is 0.00</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Interval.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Interval</mutatedClass><mutatedMethod>printWith</mutatedMethod><methodDescription>(D)Ljava/lang/String;</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>2</block><killingTest>br.com.guifr.beecrowd.IntervalTest.Return &#39;Intervalo (75,100]&#39; when value is 100.00</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Interval.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Interval</mutatedClass><mutatedMethod>printWith</mutatedMethod><methodDescription>(D)Ljava/lang/String;</methodDescription><lineNumber>19</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>31</index><block>4</block><killingTest>br.com.guifr.beecrowd.IntervalTest.Return &#39;Intervalo [0,25]&#39; when value is 15.00</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Interval.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Interval</mutatedClass><mutatedMethod>printWith</mutatedMethod><methodDescription>(D)Ljava/lang/String;</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>41</index><block>6</block><killingTest>br.com.guifr.beecrowd.IntervalTest.Return &#39;Intervalo (25,50]&#39; when value is 25.01</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Interval.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Interval</mutatedClass><mutatedMethod>printWith</mutatedMethod><methodDescription>(D)Ljava/lang/String;</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>47</index><block>6</block><killingTest>br.com.guifr.beecrowd.IntervalTest.Return &#39;Intervalo (25,50]&#39; when value is 25.01</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Interval.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Interval</mutatedClass><mutatedMethod>printWith</mutatedMethod><methodDescription>(D)Ljava/lang/String;</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>1</block><killingTest>br.com.guifr.beecrowd.IntervalTest.Return &#39;Intervalo [0,25]&#39; when value is 15.00</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Interval.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Interval</mutatedClass><mutatedMethod>printWith</mutatedMethod><methodDescription>(D)Ljava/lang/String;</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>2</block><killingTest>br.com.guifr.beecrowd.IntervalTest.Return &#39;Intervalo [0,25]&#39; when value is 15.00</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Interval.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Interval</mutatedClass><mutatedMethod>printWith</mutatedMethod><methodDescription>(D)Ljava/lang/String;</methodDescription><lineNumber>19</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>4</block><killingTest>br.com.guifr.beecrowd.IntervalTest.Return &#39;Intervalo [0,25]&#39; when value is 15.00</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Interval.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Interval</mutatedClass><mutatedMethod>printWith</mutatedMethod><methodDescription>(D)Ljava/lang/String;</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>15</index><block>3</block><killingTest>br.com.guifr.beecrowd.IntervalTest.Return &#39;Fora de intervalo&#39; when value is greather 100.00 or less than zero</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/Interval::printWith to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Interval.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Interval</mutatedClass><mutatedMethod>printWith</mutatedMethod><methodDescription>(D)Ljava/lang/String;</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>35</index><block>5</block><killingTest>br.com.guifr.beecrowd.IntervalTest.Return &#39;Intervalo [0,25]&#39; when value is 15.00</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/Interval::printWith to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Interval.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Interval</mutatedClass><mutatedMethod>printWith</mutatedMethod><methodDescription>(D)Ljava/lang/String;</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>65</index><block>6</block><killingTest>br.com.guifr.beecrowd.IntervalTest.Return &#39;Intervalo (25,50]&#39; when value is 25.01</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/Interval::printWith to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BalancedBrackets.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.BalancedBrackets</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>11</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BalancedBrackets.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.BalancedBrackets</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>25</index><block>12</block><killingTest/><description>removed call to java/io/PrintStream::println</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>BalancedBrackets.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.BalancedBrackets</mutatedClass><mutatedMethod>of</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>49</index><block>1</block><killingTest>br.com.guifr.hackerrank.BalancedBracketsTest.Return &#39;YES&#39; When verify string is balanced With &#39;{()[]}&#39;</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BalancedBrackets.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.BalancedBrackets</mutatedClass><mutatedMethod>of</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>49</index><block>1</block><killingTest>br.com.guifr.hackerrank.BalancedBracketsTest.Return &#39;NO&#39; When verify string is balanced With &#39;{[(])}&#39;</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BalancedBrackets.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.BalancedBrackets</mutatedClass><mutatedMethod>of</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>58</index><block>2</block><killingTest>br.com.guifr.hackerrank.BalancedBracketsTest.Return &#39;NO&#39; When verify string is balanced With &#39;}][}}(}][))]&#39;</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BalancedBrackets.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.BalancedBrackets</mutatedClass><mutatedMethod>of</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>73</index><block>4</block><killingTest>br.com.guifr.hackerrank.BalancedBracketsTest.Return &#39;NO&#39; When verify string is balanced With &#39;}][}}(}][))]&#39;</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>BalancedBrackets.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.BalancedBrackets</mutatedClass><mutatedMethod>of</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>83</index><block>5</block><killingTest>br.com.guifr.hackerrank.BalancedBracketsTest.Return &#39;YES&#39; When verify string is balanced With &#39;{()[]}&#39;</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BalancedBrackets.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.BalancedBrackets</mutatedClass><mutatedMethod>of</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>105</index><block>8</block><killingTest>br.com.guifr.hackerrank.BalancedBracketsTest.Return &#39;YES&#39; When verify string is balanced With &#39;{()[]}&#39;</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BalancedBrackets.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.BalancedBrackets</mutatedClass><mutatedMethod>of</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>88</index><block>6</block><killingTest>br.com.guifr.hackerrank.BalancedBracketsTest.Return &#39;NO&#39; When verify string is balanced With &#39;{[(])}&#39;</killingTest><description>mutated return of Object value for br/com/guifr/hackerrank/BalancedBrackets::of to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BalancedBrackets.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.BalancedBrackets</mutatedClass><mutatedMethod>of</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>113</index><block>10</block><killingTest>br.com.guifr.hackerrank.BalancedBracketsTest.Return &#39;YES&#39; When verify string is balanced With &#39;{()[]}&#39;</killingTest><description>mutated return of Object value for br/com/guifr/hackerrank/BalancedBrackets::of to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BalancedBrackets.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.BalancedBrackets</mutatedClass><mutatedMethod>of</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>66</index><block>3</block><killingTest>br.com.guifr.hackerrank.BalancedBracketsTest.Return &#39;YES&#39; When verify string is balanced With &#39;{()[]}&#39;</killingTest><description>removed call to java/util/Deque::push</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Average.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Average</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([Lbr/com/guifr/beecrowd/StudentGrades;)V</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>22</index><block>0</block><killingTest>br.com.guifr.beecrowd.AverageOneTest.Then return &#39;MEDIA = 4.84091&#39; when calculate avaerage 0.0 and 4.84091</killingTest><description>removed call to java/util/stream/Stream::forEach</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Average.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Average</mutatedClass><mutatedMethod>getFinalGrade</mutatedMethod><methodDescription>(DD)Ljava/math/BigDecimal;</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>21</index><block>8</block><killingTest>br.com.guifr.beecrowd.AverageOneTest.Then return &#39;MEDIA = 4.84091&#39; when calculate avaerage 0.0 and 4.84091</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/Average::getFinalGrade to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Average.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Average</mutatedClass><mutatedMethod>getFinalGrade</mutatedMethod><methodDescription>(Lbr/com/guifr/beecrowd/StudentGrades;)Ljava/math/BigDecimal;</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>7</block><killingTest>br.com.guifr.beecrowd.AverageOneTest.Then return &#39;MEDIA = 4.84091&#39; when calculate avaerage 0.0 and 4.84091</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/Average::getFinalGrade to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Average.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Average</mutatedClass><mutatedMethod>getWeightTotal</mutatedMethod><methodDescription>()Ljava/math/BigDecimal;</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>4</block><killingTest>br.com.guifr.beecrowd.AverageOneTest.Then return &#39;MEDIA = 4.84091&#39; when calculate avaerage 0.0 and 4.84091</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/Average::getWeightTotal to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Average.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Average</mutatedClass><mutatedMethod>lambda$getWeightTotal$0</mutatedMethod><methodDescription>(Lbr/com/guifr/beecrowd/StudentGrades;)Ljava/math/BigDecimal;</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>9</block><killingTest>br.com.guifr.beecrowd.AverageOneTest.Then return &#39;MEDIA = 4.84091&#39; when calculate avaerage 0.0 and 4.84091</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/Average::lambda$getWeightTotal$0 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Average.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Average</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>29</index><block>5</block><killingTest/><description>removed call to java/io/PrintStream::print</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Average.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Average</mutatedClass><mutatedMethod>of</mutatedMethod><methodDescription>(DD)Lbr/com/guifr/beecrowd/Average;</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>32</index><block>1</block><killingTest>br.com.guifr.beecrowd.AverageOneTest.Then return &#39;MEDIA = 4.84091&#39; when calculate avaerage 0.0 and 4.84091</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/Average::of to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Average.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Average</mutatedClass><mutatedMethod>of</mutatedMethod><methodDescription>([Lbr/com/guifr/beecrowd/StudentGrades;)Lbr/com/guifr/beecrowd/Average;</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>2</block><killingTest>br.com.guifr.beecrowd.AverageTwoTest.Then return &#39;MEDIA = 6.3&#39; when calculate average 5.0 , 6.0 and 7.0</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/Average::of to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Average.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Average</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>3</block><killingTest>br.com.guifr.beecrowd.AverageOneTest.Then return &#39;MEDIA = 4.84091&#39; when calculate avaerage 0.0 and 4.84091</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/Average::print to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Average.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Average</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>40</index><block>6</block><killingTest>br.com.guifr.beecrowd.AverageOneTest.Then return &#39;MEDIA = 4.84091&#39; when calculate avaerage 0.0 and 4.84091</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/Average::print to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>No.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.No</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>13</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><block>0</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>No.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.No</mutatedClass><mutatedMethod>blacked</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>1</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>No.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.No</mutatedClass><mutatedMethod>blacked</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>1</block><killingTest>br.com.guifr.beecrowd.JosephsCousinTest.Return 4 when input amount people is 6</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>No.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.No</mutatedClass><mutatedMethod>blacked</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>2</block><killingTest>br.com.guifr.beecrowd.JosephsCousinTest.Return 7 when input amount people is 9</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>No.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.No</mutatedClass><mutatedMethod>initialNo</mutatedMethod><methodDescription>(I)Lbr/com/guifr/beecrowd/No;</methodDescription><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>24</index><block>5</block><killingTest>br.com.guifr.beecrowd.JosephsCousinTest.Return 7 when input amount people is 9</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>No.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.No</mutatedClass><mutatedMethod>initialNo</mutatedMethod><methodDescription>(I)Lbr/com/guifr/beecrowd/No;</methodDescription><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>48</index><block>6</block><killingTest/><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>No.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.No</mutatedClass><mutatedMethod>initialNo</mutatedMethod><methodDescription>(I)Lbr/com/guifr/beecrowd/No;</methodDescription><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>5</block><killingTest>br.com.guifr.beecrowd.JosephsCousinTest.Return 7 when input amount people is 9</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>No.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.No</mutatedClass><mutatedMethod>initialNo</mutatedMethod><methodDescription>(I)Lbr/com/guifr/beecrowd/No;</methodDescription><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>64</index><block>7</block><killingTest>br.com.guifr.beecrowd.JosephsCousinTest.Return 7 when input amount people is 9</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/No::initialNo to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>No.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.No</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>24</index><block>4</block><killingTest/><description>mutated return of Object value for br/com/guifr/beecrowd/No::print to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>CountingValleys.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.CountingValleys</mutatedClass><mutatedMethod>stepsHike</mutatedMethod><methodDescription>(ILjava/lang/String;)I</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>61</index><block>4</block><killingTest>br.com.guifr.hackerrank.CountingValleysTest.Return 1 When the step hike is DDUUUUDD</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CountingValleys.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.CountingValleys</mutatedClass><mutatedMethod>stepsHike</mutatedMethod><methodDescription>(ILjava/lang/String;)I</methodDescription><lineNumber>13</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>45</index><block>3</block><killingTest>br.com.guifr.hackerrank.CountingValleysTest.Return 1 When the step hike is UDDDUDUU</killingTest><description>Changed increment from -1 to 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CountingValleys.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.CountingValleys</mutatedClass><mutatedMethod>stepsHike</mutatedMethod><methodDescription>(ILjava/lang/String;)I</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>55</index><block>4</block><killingTest>br.com.guifr.hackerrank.CountingValleysTest.Return 2 When the step hike is DDUUDDUDUUUD</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CountingValleys.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.CountingValleys</mutatedClass><mutatedMethod>stepsHike</mutatedMethod><methodDescription>(ILjava/lang/String;)I</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>68</index><block>6</block><killingTest>br.com.guifr.hackerrank.CountingValleysTest.Return 1 When the step hike is UDDDUDUU</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CountingValleys.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.CountingValleys</mutatedClass><mutatedMethod>stepsHike</mutatedMethod><methodDescription>(ILjava/lang/String;)I</methodDescription><lineNumber>12</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>42</index><block>2</block><killingTest>br.com.guifr.hackerrank.CountingValleysTest.Return 1 When the step hike is UDDDUDUU</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CountingValleys.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.CountingValleys</mutatedClass><mutatedMethod>stepsHike</mutatedMethod><methodDescription>(ILjava/lang/String;)I</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>52</index><block>3</block><killingTest>br.com.guifr.hackerrank.CountingValleysTest.Return 1 When the step hike is UDDDUDUU</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CountingValleys.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.CountingValleys</mutatedClass><mutatedMethod>stepsHike</mutatedMethod><methodDescription>(ILjava/lang/String;)I</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>61</index><block>4</block><killingTest>br.com.guifr.hackerrank.CountingValleysTest.Return 1 When the step hike is UDDDUDUU</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CountingValleys.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.CountingValleys</mutatedClass><mutatedMethod>stepsHike</mutatedMethod><methodDescription>(ILjava/lang/String;)I</methodDescription><lineNumber>19</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>65</index><block>5</block><killingTest>br.com.guifr.hackerrank.CountingValleysTest.Return 1 When the step hike is UDDDUDUU</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CountingValleys.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.CountingValleys</mutatedClass><mutatedMethod>stepsHike</mutatedMethod><methodDescription>(ILjava/lang/String;)I</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>89</index><block>8</block><killingTest>br.com.guifr.hackerrank.CountingValleysTest.Return 1 When the step hike is UDDDUDUU</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Area.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Area</mutatedClass><mutatedMethod>circuloArea</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>15</index><block>5</block><killingTest>br.com.guifr.beecrowd.AreaTest.Return CIRCULO area calculate with &#39;3.0 4.0 5.2&#39; points</killingTest><description>replaced return of double value with -(x + 1) for br/com/guifr/beecrowd/Area::circuloArea</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Area.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Area</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>48</index><block>1</block><killingTest/><description>removed call to java/io/PrintStream::println</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Area.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Area</mutatedClass><mutatedMethod>printAllPossiblesAreas</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>42</index><block>3</block><killingTest>br.com.guifr.beecrowd.AreaTest.Return areas calculate with &#39;12.7 10.4 15.2&#39; points</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/Area::printAllPossiblesAreas to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Area.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Area</mutatedClass><mutatedMethod>quadradoArea</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>7</block><killingTest>br.com.guifr.beecrowd.AreaTest.Return QUADRADO area calculate with &#39;12.7 10.4 15.2&#39; points</killingTest><description>replaced return of double value with -(x + 1) for br/com/guifr/beecrowd/Area::quadradoArea</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Area.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Area</mutatedClass><mutatedMethod>retanguloArea</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>11</index><block>8</block><killingTest>br.com.guifr.beecrowd.AreaTest.Return RETANGULO area calculate with &#39;3.0 4.0 5.2&#39; points</killingTest><description>replaced return of double value with -(x + 1) for br/com/guifr/beecrowd/Area::retanguloArea</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Area.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Area</mutatedClass><mutatedMethod>trapezioArea</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>22</index><block>6</block><killingTest>br.com.guifr.beecrowd.AreaTest.Return TRAPEZIO area calculate with &#39;3.0 4.0 5.2&#39; points</killingTest><description>replaced return of double value with -(x + 1) for br/com/guifr/beecrowd/Area::trapezioArea</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Area.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Area</mutatedClass><mutatedMethod>trianguloArea</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>4</block><killingTest>br.com.guifr.beecrowd.AreaTest.Return TRIANGULO area calculate with &#39;3.0 4.0 5.2&#39; points</killingTest><description>replaced return of double value with -(x + 1) for br/com/guifr/beecrowd/Area::trianguloArea</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Area.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Area</mutatedClass><mutatedMethod>with</mutatedMethod><methodDescription>(DDD)Lbr/com/guifr/beecrowd/Area;</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>2</block><killingTest>br.com.guifr.beecrowd.AreaTest.Return CIRCULO area calculate with &#39;3.0 4.0 5.2&#39; points</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/Area::with to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SalesByMatch.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.SalesByMatch</mutatedClass><mutatedMethod>of</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>43</index><block>3</block><killingTest>br.com.guifr.hackerrank.SalesByMatchTest.Return 1 When the pile of sock is 10 20 20</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SalesByMatch.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.SalesByMatch</mutatedClass><mutatedMethod>of</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>58</index><block>4</block><killingTest>br.com.guifr.hackerrank.SalesByMatchTest.Return 1 When the pile of sock is 10 20 20</killingTest><description>Replaced integer division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>SalesByMatch.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.SalesByMatch</mutatedClass><mutatedMethod>of</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>59</index><block>4</block><killingTest>br.com.guifr.hackerrank.SalesByMatchTest.Return 2 When the pile of sock is 10 20 20 10</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SalesByMatch.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.SalesByMatch</mutatedClass><mutatedMethod>of</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>74</index><block>5</block><killingTest>br.com.guifr.hackerrank.SalesByMatchTest.Return 1 When the pile of sock is 10 20 20</killingTest><description>Replaced integer division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SalesByMatch.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.SalesByMatch</mutatedClass><mutatedMethod>of</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>75</index><block>5</block><killingTest>br.com.guifr.hackerrank.SalesByMatchTest.Return 1 When the pile of sock is 10 20 20</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>SalesByMatch.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.SalesByMatch</mutatedClass><mutatedMethod>of</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>40</index><block>2</block><killingTest>br.com.guifr.hackerrank.SalesByMatchTest.Return 2 When the pile of sock is 10 20 20 10</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SalesByMatch.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.SalesByMatch</mutatedClass><mutatedMethod>of</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>80</index><block>5</block><killingTest>br.com.guifr.hackerrank.SalesByMatchTest.Return 1 When the pile of sock is 10 20 20</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>SalesByMatch.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.SalesByMatch</mutatedClass><mutatedMethod>of</mutatedMethod><methodDescription>(Ljava/util/List;)I</methodDescription><lineNumber>10</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>4</index><block>1</block><killingTest>br.com.guifr.hackerrank.SalesByMatchTest.Return 2 When the pile of sock is 10 20 20 10</killingTest><description>removed call to java/util/Collections::sort</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Banknotes.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Banknotes$Money$Builder</mutatedClass><mutatedMethod>build</mutatedMethod><methodDescription>(D)Lbr/com/guifr/beecrowd/Banknotes$Money$Builder;</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>50</index><block>1</block><killingTest>br.com.guifr.beecrowd.BanknotesTest.Return &#39;5 nota(s) de R$ 100,00&#10;0 nota(s) de R$ 50,00&#39; when decomposed 500 with fator 100 and 50</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/Banknotes$Money$Builder::build to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Banknotes.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Banknotes$Money$Builder</mutatedClass><mutatedMethod>buildCoinsWithLocaleUS</mutatedMethod><methodDescription>(D)Lbr/com/guifr/beecrowd/Banknotes$Money$Builder;</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>3</block><killingTest>br.com.guifr.beecrowd.BanknotesTest.Return &#39;5 nota(s) de R$ 100,00&#10;0 nota(s) de R$ 50,00&#39; when decomposed 500 with fator 100 and 50</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/Banknotes$Money$Builder::buildCoinsWithLocaleUS to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Banknotes.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Banknotes$Money$Builder</mutatedClass><mutatedMethod>buildLocaleUS</mutatedMethod><methodDescription>(D)Lbr/com/guifr/beecrowd/Banknotes$Money$Builder;</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>2</block><killingTest>br.com.guifr.beecrowd.BanknotesTest.Return &#39;5 nota(s) de R$ 100,00&#10;0 nota(s) de R$ 50,00&#39; when decomposed 500 with fator 100 and 50</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/Banknotes$Money$Builder::buildLocaleUS to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Banknotes.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Banknotes$Money$Builder</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>()Lbr/com/guifr/beecrowd/Banknotes$Money;</methodDescription><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>4</block><killingTest>br.com.guifr.beecrowd.BanknotesTest.Return &#39;5 nota(s) de R$ 100,00&#10;0 nota(s) de R$ 50,00&#39; when decomposed 500 with fator 100 and 50</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/Banknotes$Money$Builder::get to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Banknotes.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Banknotes$Money$Builder</mutatedClass><mutatedMethod>withLocale</mutatedMethod><methodDescription>(Ljava/util/Locale;)Lbr/com/guifr/beecrowd/Banknotes$Money$Builder;</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>11</index><block>7</block><killingTest>br.com.guifr.beecrowd.BanknotesTest.Return &#39;5 nota(s) de R$ 100,00&#10;0 nota(s) de R$ 50,00&#39; when decomposed 500 with fator 100 and 50</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/Banknotes$Money$Builder::withLocale to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Banknotes.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Banknotes$Money$Builder</mutatedClass><mutatedMethod>withNext</mutatedMethod><methodDescription>(Lbr/com/guifr/beecrowd/Banknotes$Chain;)Lbr/com/guifr/beecrowd/Banknotes$Money$Builder;</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>11</index><block>8</block><killingTest>br.com.guifr.beecrowd.BanknotesTest.Return &#39;5 nota(s) de R$ 100,00&#10;0 nota(s) de R$ 50,00&#39; when decomposed 500 with fator 100 and 50</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/Banknotes$Money$Builder::withNext to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Banknotes.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Banknotes$Money$Builder</mutatedClass><mutatedMethod>withType</mutatedMethod><methodDescription>(Ljava/lang/String;)Lbr/com/guifr/beecrowd/Banknotes$Money$Builder;</methodDescription><lineNumber>128</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>11</index><block>6</block><killingTest>br.com.guifr.beecrowd.BanknotesTest.Return &#39;5 nota(s) de R$ 100,00&#10;0 nota(s) de R$ 50,00&#39; when decomposed 500 with fator 100 and 50</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/Banknotes$Money$Builder::withType to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Banknotes.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Banknotes$Money$Builder</mutatedClass><mutatedMethod>withValue</mutatedMethod><methodDescription>(D)Lbr/com/guifr/beecrowd/Banknotes$Money$Builder;</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>11</index><block>5</block><killingTest/><description>mutated return of Object value for br/com/guifr/beecrowd/Banknotes$Money$Builder::withValue to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Banknotes.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Banknotes$Money</mutatedClass><mutatedMethod>decomposed</mutatedMethod><methodDescription>(D)Ljava/lang/String;</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>2</block><killingTest>br.com.guifr.beecrowd.BanknotesTest.Return &#39;1 moeda(s) de R$ 1.00&#39; when decomposed 1.50 with fator 1.00</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Banknotes.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Banknotes$Money</mutatedClass><mutatedMethod>decomposed</mutatedMethod><methodDescription>(D)Ljava/lang/String;</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>19</index><block>2</block><killingTest>br.com.guifr.beecrowd.BanknotesTest.Return &#39;1 moeda(s) de R$ 1.00&#39; when decomposed 1.50 with fator 1.00</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Banknotes.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Banknotes$Money</mutatedClass><mutatedMethod>decomposed</mutatedMethod><methodDescription>(D)Ljava/lang/String;</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><block>2</block><killingTest>br.com.guifr.beecrowd.BanknotesTest.Return &#39;1 moeda(s) de R$ 1.00&#39; when decomposed 1.50 with fator 1.00</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Banknotes.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Banknotes$Money</mutatedClass><mutatedMethod>decomposed</mutatedMethod><methodDescription>(D)Ljava/lang/String;</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>37</index><block>3</block><killingTest>br.com.guifr.beecrowd.BanknotesTest.Return &#39;5 nota(s) de R$ 100,00&#10;0 nota(s) de R$ 50,00&#39; when decomposed 500 with fator 100 and 50</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='13'><sourceFile>Banknotes.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Banknotes$Money</mutatedClass><mutatedMethod>decomposed</mutatedMethod><methodDescription>(D)Ljava/lang/String;</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>1</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Banknotes.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Banknotes$Money</mutatedClass><mutatedMethod>decomposed</mutatedMethod><methodDescription>(D)Ljava/lang/String;</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>116</index><block>3</block><killingTest>br.com.guifr.beecrowd.BanknotesTest.Return &#39;5 nota(s) de R$ 100,00&#10;0 nota(s) de R$ 50,00&#39; when decomposed 500 with fator 100 and 50</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/Banknotes$Money::decomposed to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Banknotes.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Banknotes$Money</mutatedClass><mutatedMethod>execute</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/String;</methodDescription><lineNumber>89</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>4</block><killingTest>br.com.guifr.beecrowd.BanknotesTest.Return &#39;5 nota(s) de R$ 100,00&#10;0 nota(s) de R$ 50,00&#39; when decomposed 500 with fator 100 and 50</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/Banknotes$Money::execute to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FrequencyQueries.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.FrequencyQueries</mutatedClass><mutatedMethod>of</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/List;</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>47</index><block>2</block><killingTest>br.com.guifr.hackerrank.FrequencyQueriesTest.Return [0,1,1q] When frequency queris With third exemple</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FrequencyQueries.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.FrequencyQueries</mutatedClass><mutatedMethod>of</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/List;</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>63</index><block>4</block><killingTest>br.com.guifr.hackerrank.FrequencyQueriesTest.Return [0,1,1q] When frequency queris With third exemple</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FrequencyQueries.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.FrequencyQueries</mutatedClass><mutatedMethod>of</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/List;</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>79</index><block>6</block><killingTest>br.com.guifr.hackerrank.FrequencyQueriesTest.Return [0,1,1q] When frequency queris With third exemple</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FrequencyQueries.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.FrequencyQueries</mutatedClass><mutatedMethod>of</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/List;</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>91</index><block>7</block><killingTest>br.com.guifr.hackerrank.FrequencyQueriesTest.Return [0,1,1q] When frequency queris With third exemple</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FrequencyQueries.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.FrequencyQueries</mutatedClass><mutatedMethod>of</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/List;</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>110</index><block>10</block><killingTest>br.com.guifr.hackerrank.FrequencyQueriesTest.Return [0,1,1q] When frequency queris With third exemple</killingTest><description>mutated return of Object value for br/com/guifr/hackerrank/FrequencyQueries::of to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FrequencyQueries.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.FrequencyQueries</mutatedClass><mutatedMethod>of</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/List;</methodDescription><lineNumber>19</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>56</index><block>3</block><killingTest>br.com.guifr.hackerrank.FrequencyQueriesTest.Return [0,1,1q] When frequency queris With third exemple</killingTest><description>removed call to br/com/guifr/hackerrank/FrequencyQueries$ActionOne::execute</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>FrequencyQueries.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.FrequencyQueries</mutatedClass><mutatedMethod>of</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/List;</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>72</index><block>5</block><killingTest>br.com.guifr.hackerrank.FrequencyQueriesTest.Return [0,1] When frequency queris With first exemple</killingTest><description>removed call to br/com/guifr/hackerrank/FrequencyQueries$ActionTwo::execute</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TheGreatest.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.TheGreatest</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>61</index><block>5</block><killingTest/><description>removed call to java/io/PrintStream::println</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TheGreatest.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.TheGreatest</mutatedClass><mutatedMethod>of</mutatedMethod><methodDescription>([I)Ljava/lang/String;</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>45</index><block>3</block><killingTest>br.com.guifr.beecrowd.TheGreatestTest.Return &#39;106 eh o maior&#39; when numbers is 7 14 106</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/TheGreatest::of to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TheGreatest.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.TheGreatest</mutatedClass><mutatedMethod>usingFormula</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>4</block><killingTest>br.com.guifr.beecrowd.TheGreatestTest.Return &#39;106 eh o maior&#39; when numbers is 7 14 106</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TheGreatest.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.TheGreatest</mutatedClass><mutatedMethod>usingFormula</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>8</index><block>4</block><killingTest>br.com.guifr.beecrowd.TheGreatestTest.Return &#39;106 eh o maior&#39; when numbers is 7 14 106</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TheGreatest.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.TheGreatest</mutatedClass><mutatedMethod>usingFormula</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>10</index><block>4</block><killingTest>br.com.guifr.beecrowd.TheGreatestTest.Return &#39;106 eh o maior&#39; when numbers is 7 14 106</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TheGreatest.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.TheGreatest</mutatedClass><mutatedMethod>usingFormula</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>4</block><killingTest>br.com.guifr.beecrowd.TheGreatestTest.Return &#39;106 eh o maior&#39; when numbers is 7 14 106</killingTest><description>Replaced integer division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TheGreatest.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.TheGreatest</mutatedClass><mutatedMethod>usingFormula</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>13</index><block>4</block><killingTest>br.com.guifr.beecrowd.TheGreatestTest.Return &#39;106 eh o maior&#39; when numbers is 7 14 106</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Diference.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Diference</mutatedClass><mutatedMethod>calc</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>3</block><killingTest>br.com.guifr.beecrowd.DiferenceTest.Then return 86 when apply formula (A * B - C * D) with 5 6 -7 8</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Diference.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Diference</mutatedClass><mutatedMethod>calc</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>3</block><killingTest>br.com.guifr.beecrowd.DiferenceTest.Then return 86 when apply formula (A * B - C * D) with 5 6 -7 8</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Diference.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Diference</mutatedClass><mutatedMethod>calc</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>3</block><killingTest>br.com.guifr.beecrowd.DiferenceTest.Then return 86 when apply formula (A * B - C * D) with 5 6 -7 8</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Diference.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Diference</mutatedClass><mutatedMethod>calc</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>3</block><killingTest>br.com.guifr.beecrowd.DiferenceTest.Then return 86 when apply formula (A * B - C * D) with 5 6 -7 8</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Diference.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Diference</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>37</index><block>4</block><killingTest/><description>removed call to java/io/PrintStream::println</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Diference.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Diference</mutatedClass><mutatedMethod>of</mutatedMethod><methodDescription>(IIII)Lbr/com/guifr/beecrowd/Diference;</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>1</block><killingTest>br.com.guifr.beecrowd.DiferenceTest.Then return 86 when apply formula (A * B - C * D) with 5 6 -7 8</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/Diference::of to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Diference.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Diference</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>13</index><block>2</block><killingTest>br.com.guifr.beecrowd.DiferenceTest.Then return 86 when apply formula (A * B - C * D) with 5 6 -7 8</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/Diference::print to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RepeatedString.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.RepeatedString</mutatedClass><mutatedMethod>countAs</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><block>2</block><killingTest>br.com.guifr.hackerrank.RepeatedStringTest.Return 1 when count many &#39;a&#39; in string with s = &#39;qweqwab&#39;</killingTest><description>replaced return of long value with value + 1 for br/com/guifr/hackerrank/RepeatedString::countAs</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RepeatedString.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.RepeatedString</mutatedClass><mutatedMethod>lambda$countAs$0</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>3</block><killingTest>br.com.guifr.hackerrank.RepeatedStringTest.Return 1 when count many &#39;a&#39; in string with s = &#39;qweqwab&#39;</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>RepeatedString.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.RepeatedString</mutatedClass><mutatedMethod>searchIn</mutatedMethod><methodDescription>(Ljava/lang/String;J)J</methodDescription><lineNumber>10</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>1</block><killingTest>br.com.guifr.hackerrank.RepeatedStringTest.Return 6  when search &#39;a&#39; in 9 first letters with s = &#39;aab&#39;</killingTest><description>Replaced long division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RepeatedString.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.RepeatedString</mutatedClass><mutatedMethod>searchIn</mutatedMethod><methodDescription>(Ljava/lang/String;J)J</methodDescription><lineNumber>11</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>15</index><block>1</block><killingTest>br.com.guifr.hackerrank.RepeatedStringTest.Return 1000000000000 when search &#39;a&#39; in 1000000000000 first letters with s = &#39;a&#39;</killingTest><description>Replaced long modulus with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>RepeatedString.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.RepeatedString</mutatedClass><mutatedMethod>searchIn</mutatedMethod><methodDescription>(Ljava/lang/String;J)J</methodDescription><lineNumber>12</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><block>1</block><killingTest>br.com.guifr.hackerrank.RepeatedStringTest.Return 6  when search &#39;a&#39; in 9 first letters with s = &#39;aab&#39;</killingTest><description>Replaced long multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>RepeatedString.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.RepeatedString</mutatedClass><mutatedMethod>searchIn</mutatedMethod><methodDescription>(Ljava/lang/String;J)J</methodDescription><lineNumber>12</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>29</index><block>1</block><killingTest>br.com.guifr.hackerrank.RepeatedStringTest.Return 7 when search &#39;a&#39; in 10 first letters with s = &#39;aba&#39;</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RepeatedString.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.RepeatedString</mutatedClass><mutatedMethod>searchIn</mutatedMethod><methodDescription>(Ljava/lang/String;J)J</methodDescription><lineNumber>12</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>30</index><block>1</block><killingTest>br.com.guifr.hackerrank.RepeatedStringTest.Return 1000000000000 when search &#39;a&#39; in 1000000000000 first letters with s = &#39;a&#39;</killingTest><description>replaced return of long value with value + 1 for br/com/guifr/hackerrank/RepeatedString::searchIn</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ArrayManipulation.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.ArrayManipulation</mutatedClass><mutatedMethod>maximumValue</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>43</index><block>3</block><killingTest>br.com.guifr.hackerrank.ArrayManipulationTest.Return 31 when search maximum value in arrayManipulation with [2 6 8][3 5 7][1 8 1][5 9 15] and n = 10</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArrayManipulation.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.ArrayManipulation</mutatedClass><mutatedMethod>maximumValue</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>69</index><block>4</block><killingTest>br.com.guifr.hackerrank.ArrayManipulationTest.Return 200 when search maximum value in arrayManipulation with [1 2 100],[2 5 100],[3 4 100] and n = 5</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArrayManipulation.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.ArrayManipulation</mutatedClass><mutatedMethod>maximumValue</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>2</block><killingTest>br.com.guifr.hackerrank.ArrayManipulationTest.Return 200 when search maximum value in arrayManipulation with [1 2 100],[2 5 100],[3 4 100] and n = 5</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArrayManipulation.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.ArrayManipulation</mutatedClass><mutatedMethod>maximumValue</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>57</index><block>4</block><killingTest>br.com.guifr.hackerrank.ArrayManipulationTest.Return 200 when search maximum value in arrayManipulation with [1 2 100],[2 5 100],[3 4 100] and n = 5</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArrayManipulation.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.ArrayManipulation</mutatedClass><mutatedMethod>maximumValue</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>43</index><block>3</block><killingTest>br.com.guifr.hackerrank.ArrayManipulationTest.Return 200 when search maximum value in arrayManipulation with [1 2 100],[2 5 100],[3 4 100] and n = 5</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArrayManipulation.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.ArrayManipulation</mutatedClass><mutatedMethod>maximumValue</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>90</index><block>6</block><killingTest>br.com.guifr.hackerrank.ArrayManipulationTest.Return 200 when search maximum value in arrayManipulation with [1 2 100],[2 5 100],[3 4 100] and n = 5</killingTest><description>replaced return of long value with value + 1 for br/com/guifr/hackerrank/ArrayManipulation::maximumValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArrayManipulation.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.ArrayManipulation</mutatedClass><mutatedMethod>of</mutatedMethod><methodDescription>(Ljava/util/List;)Lbr/com/guifr/hackerrank/ArrayManipulation;</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>1</block><killingTest>br.com.guifr.hackerrank.ArrayManipulationTest.Return 200 when search maximum value in arrayManipulation with [1 2 100],[2 5 100],[3 4 100] and n = 5</killingTest><description>mutated return of Object value for br/com/guifr/hackerrank/ArrayManipulation::of to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TreeHeightBinaryTree.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.TreeHeightBinaryTree</mutatedClass><mutatedMethod>height</mutatedMethod><methodDescription>(Lbr/com/guifr/hackerrank/Trees$Node;)I</methodDescription><lineNumber>12</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>38</index><block>6</block><killingTest>br.com.guifr.hackerrank.TreeHeightBinaryTreeTest.Return 3 When getHeight With tree [3 1 7 5 4]</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TreeHeightBinaryTree.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.TreeHeightBinaryTree</mutatedClass><mutatedMethod>height</mutatedMethod><methodDescription>(Lbr/com/guifr/hackerrank/Trees$Node;)I</methodDescription><lineNumber>8</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>1</block><killingTest>br.com.guifr.hackerrank.TreeHeightBinaryTreeTest.Return 3 When getHeight With tree [3 1 7 5 4]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TreeHeightBinaryTree.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.TreeHeightBinaryTree</mutatedClass><mutatedMethod>height</mutatedMethod><methodDescription>(Lbr/com/guifr/hackerrank/Trees$Node;)I</methodDescription><lineNumber>11</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>3</block><killingTest>br.com.guifr.hackerrank.TreeHeightBinaryTreeTest.Return 3 When getHeight With tree [3 1 7 5 4]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TreeHeightBinaryTree.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.TreeHeightBinaryTree</mutatedClass><mutatedMethod>height</mutatedMethod><methodDescription>(Lbr/com/guifr/hackerrank/Trees$Node;)I</methodDescription><lineNumber>11</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>4</block><killingTest>br.com.guifr.hackerrank.TreeHeightBinaryTreeTest.Return 3 When getHeight With tree [3 1 7 5 4]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TreeHeightBinaryTree.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.TreeHeightBinaryTree</mutatedClass><mutatedMethod>height</mutatedMethod><methodDescription>(Lbr/com/guifr/hackerrank/Trees$Node;)I</methodDescription><lineNumber>9</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>2</block><killingTest>br.com.guifr.hackerrank.TreeHeightBinaryTreeTest.Return 3 When getHeight With tree [3 1 7 5 4]</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TreeHeightBinaryTree.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.TreeHeightBinaryTree</mutatedClass><mutatedMethod>height</mutatedMethod><methodDescription>(Lbr/com/guifr/hackerrank/Trees$Node;)I</methodDescription><lineNumber>12</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>39</index><block>6</block><killingTest>br.com.guifr.hackerrank.TreeHeightBinaryTreeTest.Return 3 When getHeight With tree [3 1 7 5 4]</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen$Axle</mutatedClass><mutatedMethod>canExecute</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>1</block><killingTest>br.com.guifr.beecrowd.QueenTest.Return 2 when The Queen started 8 8 and ended 2 1</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='21'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen$Axle</mutatedClass><mutatedMethod>canExecute</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>2</block><killingTest>br.com.guifr.beecrowd.QueenTest.7 - Return [1] when The Queen started [5] [3] and ended [8] [3]</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen$Axle</mutatedClass><mutatedMethod>canExecute</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>1</block><killingTest>br.com.guifr.beecrowd.QueenTest.Return 1 when search diagonal in x axle to left up</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen$Axle</mutatedClass><mutatedMethod>canExecute</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>2</block><killingTest>br.com.guifr.beecrowd.QueenTest.Return 1 when search diagonal in x axle to left up</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen$Axle</mutatedClass><mutatedMethod>canExecute</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>4</block><killingTest>br.com.guifr.beecrowd.QueenTest.Return 1 when search diagonal in x axle to left up</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen$Axle</mutatedClass><mutatedMethod>getAxle</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>235</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>5</block><killingTest>br.com.guifr.beecrowd.QueenTest.Return 1 when search diagonal in x axle to left up</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimpleCalculate.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.SimpleCalculate</mutatedClass><mutatedMethod>calculate</mutatedMethod><methodDescription>()Ljava/math/BigDecimal;</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>3</block><killingTest>br.com.guifr.beecrowd.SimpleCalculateTest.Return &#39;VALOR A PAGAR: R$ 51.40&#39; when sum the values to pay</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/SimpleCalculate::calculate to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimpleCalculate.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.SimpleCalculate</mutatedClass><mutatedMethod>lambda$calculate$0</mutatedMethod><methodDescription>(Lbr/com/guifr/beecrowd/SimpleCalculate$Product;)Ljava/math/BigDecimal;</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>6</block><killingTest>br.com.guifr.beecrowd.SimpleCalculateTest.Return &#39;VALOR A PAGAR: R$ 51.40&#39; when sum the values to pay</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/SimpleCalculate::lambda$calculate$0 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimpleCalculate.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.SimpleCalculate</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>44</index><block>4</block><killingTest/><description>removed call to java/io/PrintStream::println</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimpleCalculate.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.SimpleCalculate</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>15</index><block>2</block><killingTest>br.com.guifr.beecrowd.SimpleCalculateTest.Return &#39;VALOR A PAGAR: R$ 51.40&#39; when sum the values to pay</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/SimpleCalculate::print to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimpleCalculate.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.SimpleCalculate</mutatedClass><mutatedMethod>products</mutatedMethod><methodDescription>(Ljava/util/List;)Lbr/com/guifr/beecrowd/SimpleCalculate;</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>5</block><killingTest>br.com.guifr.beecrowd.SimpleCalculateTest.Return &#39;VALOR A PAGAR: R$ 51.40&#39; when sum the values to pay</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/SimpleCalculate::products to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Trees.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.Trees</mutatedClass><mutatedMethod>insert</mutatedMethod><methodDescription>(Lbr/com/guifr/hackerrank/Trees$Node;I)Lbr/com/guifr/hackerrank/Trees$Node;</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>18</index><block>3</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Trees.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.Trees</mutatedClass><mutatedMethod>insert</mutatedMethod><methodDescription>(Lbr/com/guifr/hackerrank/Trees$Node;I)Lbr/com/guifr/hackerrank/Trees$Node;</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>1</block><killingTest>br.com.guifr.hackerrank.TreeHeightBinaryTreeTest.Return 3 When getHeight With tree [3 1 7 5 4]</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Trees.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.Trees</mutatedClass><mutatedMethod>insert</mutatedMethod><methodDescription>(Lbr/com/guifr/hackerrank/Trees$Node;I)Lbr/com/guifr/hackerrank/Trees$Node;</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>3</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Trees.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.Trees</mutatedClass><mutatedMethod>insert</mutatedMethod><methodDescription>(Lbr/com/guifr/hackerrank/Trees$Node;I)Lbr/com/guifr/hackerrank/Trees$Node;</methodDescription><lineNumber>19</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>11</index><block>2</block><killingTest>br.com.guifr.hackerrank.TreeHeightBinaryTreeTest.Return 3 When getHeight With tree [3 1 7 5 4]</killingTest><description>mutated return of Object value for br/com/guifr/hackerrank/Trees::insert to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Trees.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.Trees</mutatedClass><mutatedMethod>insert</mutatedMethod><methodDescription>(Lbr/com/guifr/hackerrank/Trees$Node;I)Lbr/com/guifr/hackerrank/Trees$Node;</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>49</index><block>5</block><killingTest>br.com.guifr.hackerrank.TreeHeightBinaryTreeTest.Return 3 When getHeight With tree [3 1 7 5 4]</killingTest><description>mutated return of Object value for br/com/guifr/hackerrank/Trees::insert to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PowerCrisis.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.PowerCrisis$City</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>19</index><block>0</block><killingTest>br.com.guifr.beecrowd.PowerCrisisTest.Return 3 cities illuminated</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PowerCrisis.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.PowerCrisis$City</mutatedClass><mutatedMethod>blacked</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>1</block><killingTest>br.com.guifr.beecrowd.PowerCrisisTest.Return 2 cities illuminated when one blacked</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PowerCrisis.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.PowerCrisis$City</mutatedClass><mutatedMethod>blacked</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>1</block><killingTest>br.com.guifr.beecrowd.PowerCrisisTest.Return 2 cities illuminated when one blacked</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PowerCrisis.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.PowerCrisis$City</mutatedClass><mutatedMethod>blacked</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>84</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>2</block><killingTest>br.com.guifr.beecrowd.PowerCrisisTest.Return 2 cities illuminated when one blacked</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PowerCrisis.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.PowerCrisis$City</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>24</index><block>4</block><killingTest/><description>mutated return of Object value for br/com/guifr/beecrowd/PowerCrisis$City::print to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SalaryWithBonus.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.SalaryWithBonus</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>31</index><block>5</block><killingTest/><description>removed call to java/io/PrintStream::println</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SalaryWithBonus.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.SalaryWithBonus</mutatedClass><mutatedMethod>ofSalary</mutatedMethod><methodDescription>(Ljava/lang/String;)Lbr/com/guifr/beecrowd/SalaryWithBonus;</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>2</block><killingTest>br.com.guifr.beecrowd.SalaryWithBonusTest.Return &#39;TOTAL = R$ 700.00&#39; when calculate salary 700.00 and no sales</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/SalaryWithBonus::ofSalary to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SalaryWithBonus.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.SalaryWithBonus</mutatedClass><mutatedMethod>ofSales</mutatedMethod><methodDescription>(Ljava/lang/String;)Lbr/com/guifr/beecrowd/SalaryWithBonus;</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>12</index><block>3</block><killingTest>br.com.guifr.beecrowd.SalaryWithBonusTest.Return &#39;TOTAL = R$ 684.54&#39; when calculate salary 500.00 and sales 1230.30</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/SalaryWithBonus::ofSales to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SalaryWithBonus.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.SalaryWithBonus</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>38</index><block>4</block><killingTest>br.com.guifr.beecrowd.SalaryWithBonusTest.Return &#39;TOTAL = R$ 700.00&#39; when calculate salary 700.00 and no sales</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/SalaryWithBonus::print to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TimeConversion.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.TimeConversion$Time</mutatedClass><mutatedMethod>result</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>6</index><block>1</block><killingTest>br.com.guifr.beecrowd.TimeConversionTest.Return &#39;1&#39; when calculate just hours of 3601</killingTest><description>Replaced integer division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>TimeConversion.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.TimeConversion$Time</mutatedClass><mutatedMethod>result</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>1</block><killingTest>br.com.guifr.beecrowd.TimeConversionTest.Return &#39;9:16&#39; when calculate minutos and seconds of 556</killingTest><description>Replaced integer modulus with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TimeConversion.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.TimeConversion$Time</mutatedClass><mutatedMethod>result</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>1</block><killingTest>br.com.guifr.beecrowd.TimeConversionTest.Return &#39;1&#39; when calculate just hours of 3601</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TimeConversion.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.TimeConversion$Time</mutatedClass><mutatedMethod>result</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>48</index><block>3</block><killingTest>br.com.guifr.beecrowd.TimeConversionTest.Return &#39;1&#39; when calculate just hours of 3601</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/TimeConversion$Time::result to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>FrequencyQueries.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.FrequencyQueries$ActionTwo</mutatedClass><mutatedMethod>execute</mutatedMethod><methodDescription>(Ljava/util/HashMap;Ljava/lang/Integer;)V</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>14</index><block>2</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FrequencyQueries.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.FrequencyQueries$ActionTwo</mutatedClass><mutatedMethod>execute</mutatedMethod><methodDescription>(Ljava/util/HashMap;Ljava/lang/Integer;)V</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>3</block><killingTest>br.com.guifr.hackerrank.FrequencyQueriesTest.Return [0,1,1q] When frequency queris With third exemple</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FrequencyQueries.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.FrequencyQueries$ActionTwo</mutatedClass><mutatedMethod>execute</mutatedMethod><methodDescription>(Ljava/util/HashMap;Ljava/lang/Integer;)V</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>1</block><killingTest>br.com.guifr.hackerrank.FrequencyQueriesTest.Return ... When frequency queris With hackerrank exemple</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>FrequencyQueries.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.FrequencyQueries$ActionTwo</mutatedClass><mutatedMethod>execute</mutatedMethod><methodDescription>(Ljava/util/HashMap;Ljava/lang/Integer;)V</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>2</block><killingTest>br.com.guifr.hackerrank.FrequencyQueriesTest.Return [0,1] When frequency queris With first exemple</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MaximumElement.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.MaximumElement</mutatedClass><mutatedMethod>lambda$of$0</mutatedMethod><methodDescription>(Ljava/lang/Integer;)I</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>7</block><killingTest>br.com.guifr.hackerrank.MaximumElementTest.Return [26 91] When work with stack With list of input</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MaximumElement.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.MaximumElement</mutatedClass><mutatedMethod>of</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/List;</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>92</index><block>4</block><killingTest>br.com.guifr.hackerrank.MaximumElementTest.Return [26 91] When work with stack With list of input</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MaximumElement.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.MaximumElement</mutatedClass><mutatedMethod>of</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/List;</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>122</index><block>6</block><killingTest>br.com.guifr.hackerrank.MaximumElementTest.Return [26 91] When work with stack With list of input</killingTest><description>mutated return of Object value for br/com/guifr/hackerrank/MaximumElement::of to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MaximumElement.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.MaximumElement</mutatedClass><mutatedMethod>of</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/List;</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>69</index><block>2</block><killingTest>br.com.guifr.hackerrank.MaximumElementTest.Return [26 91] When work with stack With list of input</killingTest><description>removed call to java/util/Deque::push</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DistanceBetweenTwoPoints.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.DistanceBetweenTwoPoints</mutatedClass><mutatedMethod>distance</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>31</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>45</index><block>2</block><killingTest>br.com.guifr.beecrowd.DistanceBetweenTwoPointsTest.Return 4.4721 when calculate distance between 1.0 7.0 with 5.0 9.0</killingTest><description>replaced return of double value with -(x + 1) for br/com/guifr/beecrowd/DistanceBetweenTwoPoints::distance</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DistanceBetweenTwoPoints.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.DistanceBetweenTwoPoints</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>31</index><block>4</block><killingTest/><description>removed call to java/io/PrintStream::println</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DistanceBetweenTwoPoints.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.DistanceBetweenTwoPoints</mutatedClass><mutatedMethod>points</mutatedMethod><methodDescription>(Lbr/com/guifr/beecrowd/DistanceBetweenTwoPoints$Point;Lbr/com/guifr/beecrowd/DistanceBetweenTwoPoints$Point;)Lbr/com/guifr/beecrowd/DistanceBetweenTwoPoints;</methodDescription><lineNumber>19</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>1</block><killingTest>br.com.guifr.beecrowd.DistanceBetweenTwoPointsTest.Return 4.4721 when calculate distance between 1.0 7.0 with 5.0 9.0</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/DistanceBetweenTwoPoints::points to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DistanceBetweenTwoPoints.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.DistanceBetweenTwoPoints</mutatedClass><mutatedMethod>subtractionWithPow</mutatedMethod><methodDescription>(DD)Ljava/math/BigDecimal;</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>3</block><killingTest>br.com.guifr.beecrowd.DistanceBetweenTwoPointsTest.Return 4.4721 when calculate distance between 1.0 7.0 with 5.0 9.0</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/DistanceBetweenTwoPoints::subtractionWithPow to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimpleSum.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.SimpleSum</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>24</index><block>2</block><killingTest/><description>removed call to java/io/PrintStream::print</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimpleSum.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.SimpleSum</mutatedClass><mutatedMethod>printSum</mutatedMethod><methodDescription>(II)Ljava/lang/String;</methodDescription><lineNumber>9</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>10</index><block>1</block><killingTest>br.com.guifr.beecrowd.SimpleSumTest.Then return SOMA = 40 with &#39;&#10;&#39; in final sentence when sum 30 and 10</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimpleSum.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.SimpleSum</mutatedClass><mutatedMethod>printSum</mutatedMethod><methodDescription>(II)Ljava/lang/String;</methodDescription><lineNumber>9</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>1</block><killingTest>br.com.guifr.beecrowd.SimpleSumTest.Then return SOMA = 40 with &#39;&#10;&#39; in final sentence when sum 30 and 10</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/SimpleSum::printSum to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Distance.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Distance</mutatedClass><mutatedMethod>inTime</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>10</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>10</index><block>1</block><killingTest>br.com.guifr.beecrowd.DistanceTest.Return &#39;14 minutos&#39; when input is 7 kilometers</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Distance.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Distance</mutatedClass><mutatedMethod>inTime</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>10</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>1</block><killingTest>br.com.guifr.beecrowd.DistanceTest.Return &#39;14 minutos&#39; when input is 7 kilometers</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/Distance::inTime to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Distance.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Distance</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>14</index><block>2</block><killingTest/><description>removed call to java/io/PrintStream::println</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Banknotes.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Banknotes$Chain</mutatedClass><mutatedMethod>addNext</mutatedMethod><methodDescription>(Lbr/com/guifr/beecrowd/Banknotes$Chain;)Lbr/com/guifr/beecrowd/Banknotes$Chain;</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>1</block><killingTest>br.com.guifr.beecrowd.BanknotesTest.Return &#39;5 nota(s) de R$ 100,00&#10;0 nota(s) de R$ 50,00&#39; when decomposed 500 with fator 100 and 50</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/Banknotes$Chain::addNext to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Banknotes.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Banknotes$Chain</mutatedClass><mutatedMethod>callNext</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/String;</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>2</block><killingTest>br.com.guifr.beecrowd.BanknotesTest.Return &#39;5 nota(s) de R$ 100,00&#10;0 nota(s) de R$ 50,00&#39; when decomposed 500 with fator 100 and 50</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Banknotes.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Banknotes$Chain</mutatedClass><mutatedMethod>callNext</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/String;</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>33</index><block>3</block><killingTest>br.com.guifr.beecrowd.BanknotesTest.Return &#39;5 nota(s) de R$ 100,00&#10;0 nota(s) de R$ 50,00&#39; when decomposed 500 with fator 100 and 50</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/Banknotes$Chain::callNext to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TwoStrings.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.TwoStrings</mutatedClass><mutatedMethod>shareBetween</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>1</block><killingTest>br.com.guifr.hackerrank.TwoStringsTest.Return &#39;NO&#39; when determine if &#39;be&#39; &#38; &#39;cat&#39; share substring</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TwoStrings.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.TwoStrings</mutatedClass><mutatedMethod>shareBetween</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>47</index><block>3</block><killingTest>br.com.guifr.hackerrank.TwoStringsTest.Return &#39;NO&#39; when determine if &#39;be&#39; &#38; &#39;cat&#39; share substring</killingTest><description>mutated return of Object value for br/com/guifr/hackerrank/TwoStrings::shareBetween to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TwoStrings.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.TwoStrings</mutatedClass><mutatedMethod>shareBetween</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>20</index><block>1</block><killingTest>br.com.guifr.hackerrank.TwoStringsTest.Return &#39;YES&#39; when determine if &#39;and&#39; &#38; &#39;art&#39; share substring</killingTest><description>removed call to java/util/stream/Stream::forEach</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>HashTables.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.HashTables</mutatedClass><mutatedMethod>checkMagazine</mutatedMethod><methodDescription>(Ljava/util/List;Ljava/util/List;)Ljava/lang/String;</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>2</block><killingTest>br.com.guifr.hackerrank.HashTablesTest.Return &#39;Yes&#39; When can search all words in the magazine words</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HashTables.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.HashTables</mutatedClass><mutatedMethod>checkMagazine</mutatedMethod><methodDescription>(Ljava/util/List;Ljava/util/List;)Ljava/lang/String;</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>38</index><block>3</block><killingTest>br.com.guifr.hackerrank.HashTablesTest.Return &#39;No&#39; When can search all words in the magazine words</killingTest><description>mutated return of Object value for br/com/guifr/hackerrank/HashTables::checkMagazine to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HashTables.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.HashTables</mutatedClass><mutatedMethod>checkMagazine</mutatedMethod><methodDescription>(Ljava/util/List;Ljava/util/List;)Ljava/lang/String;</methodDescription><lineNumber>19</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>47</index><block>5</block><killingTest>br.com.guifr.hackerrank.HashTablesTest.Return &#39;Yes&#39; When can search all words in the magazine words</killingTest><description>mutated return of Object value for br/com/guifr/hackerrank/HashTables::checkMagazine to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Banknotes.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Banknotes</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>146</index><block>3</block><killingTest/><description>removed call to java/io/PrintStream::println</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Banknotes.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Banknotes</mutatedClass><mutatedMethod>printNotes</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>2</block><killingTest>br.com.guifr.beecrowd.BanknotesTest.Return the all money notes when value is 576</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/Banknotes::printNotes to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Banknotes.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Banknotes</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(ILbr/com/guifr/beecrowd/Banknotes$Money;)Lbr/com/guifr/beecrowd/Banknotes;</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>1</block><killingTest>br.com.guifr.beecrowd.BanknotesTest.Return the all money notes when value is 576</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/Banknotes::value to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimpleCalculate.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.SimpleCalculate$Product</mutatedClass><mutatedMethod>getCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>70</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>4</block><killingTest>br.com.guifr.beecrowd.SimpleCalculateTest.Return Product with code 12 qtd 1 and value 5.30 when line &#39;12 1 5.30&#39;</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimpleCalculate.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.SimpleCalculate$Product</mutatedClass><mutatedMethod>getQtd</mutatedMethod><methodDescription>()Ljava/math/BigDecimal;</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>2</block><killingTest>br.com.guifr.beecrowd.SimpleCalculateTest.Return &#39;VALOR A PAGAR: R$ 51.40&#39; when sum the values to pay</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/SimpleCalculate$Product::getQtd to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimpleCalculate.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.SimpleCalculate$Product</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Ljava/math/BigDecimal;</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>3</block><killingTest>br.com.guifr.beecrowd.SimpleCalculateTest.Return &#39;VALOR A PAGAR: R$ 51.40&#39; when sum the values to pay</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/SimpleCalculate$Product::getValue to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Consumption.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Consumption</mutatedClass><mutatedMethod>average</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>27</index><block>3</block><killingTest>br.com.guifr.beecrowd.ConsumptionTest.Return &#39;18.119 km/l&#39; when road 2254 km with 124.4 liters</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/Consumption::average to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Consumption.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Consumption</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>29</index><block>1</block><killingTest/><description>removed call to java/io/PrintStream::println</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Consumption.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Consumption</mutatedClass><mutatedMethod>with</mutatedMethod><methodDescription>(ID)Lbr/com/guifr/beecrowd/Consumption;</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>2</block><killingTest>br.com.guifr.beecrowd.ConsumptionTest.Return &#39;18.119 km/l&#39; when road 2254 km with 124.4 liters</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/Consumption::with to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Sphere.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Sphere</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>4</block><killingTest/><description>removed call to java/io/PrintStream::print</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sphere.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Sphere</mutatedClass><mutatedMethod>printVolume</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>31</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>49</index><block>3</block><killingTest>br.com.guifr.beecrowd.SphereTest.Return &#39;VOLUME = 113.097&#39; when radius is 3</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/Sphere::printVolume to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sphere.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Sphere</mutatedClass><mutatedMethod>withRadius</mutatedMethod><methodDescription>(I)Lbr/com/guifr/beecrowd/Sphere;</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>2</block><killingTest>br.com.guifr.beecrowd.SphereTest.Return &#39;VOLUME = 113.097&#39; when radius is 3</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/Sphere::withRadius to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TimeConversion.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.TimeConversion</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>52</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>36</index><block>3</block><killingTest/><description>removed call to java/io/PrintStream::println</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TimeConversion.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.TimeConversion</mutatedClass><mutatedMethod>printTime</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>2</block><killingTest>br.com.guifr.beecrowd.TimeConversionTest.Return &#39;0:9:16&#39; when calculate time 556</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/TimeConversion::printTime to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TimeConversion.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.TimeConversion</mutatedClass><mutatedMethod>seconds</mutatedMethod><methodDescription>(ILbr/com/guifr/beecrowd/TimeConversion$Time;)Lbr/com/guifr/beecrowd/TimeConversion;</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>1</block><killingTest>br.com.guifr.beecrowd.TimeConversionTest.Return &#39;0:9:16&#39; when calculate time 556</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/TimeConversion::seconds to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimpleProduct.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.SimpleProduct</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>24</index><block>2</block><killingTest/><description>removed call to java/io/PrintStream::print</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimpleProduct.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.SimpleProduct</mutatedClass><mutatedMethod>printProd</mutatedMethod><methodDescription>(II)Ljava/lang/String;</methodDescription><lineNumber>9</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>10</index><block>1</block><killingTest>br.com.guifr.beecrowd.SimpleProductTest.Then return PROD = -300 with &#39;&#10;&#39; in final sentence when prod -30 and 10</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimpleProduct.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.SimpleProduct</mutatedClass><mutatedMethod>printProd</mutatedMethod><methodDescription>(II)Ljava/lang/String;</methodDescription><lineNumber>9</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>1</block><killingTest>br.com.guifr.beecrowd.SimpleProductTest.Then return PROD = -300 with &#39;&#10;&#39; in final sentence when prod -30 and 10</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/SimpleProduct::printProd to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HelloWorld.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.HelloWorld</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>13</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>2</block><killingTest/><description>removed call to java/io/PrintStream::println</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HelloWorld.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.HelloWorld</mutatedClass><mutatedMethod>printHelloWorld</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>9</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>1</block><killingTest>br.com.guifr.beecrowd.HelloWorldTest.returnHelloWorld()</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/HelloWorld::printHelloWorld to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LeftRotation.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.LeftRotation</mutatedClass><mutatedMethod>rotateLeft</mutatedMethod><methodDescription>(ILjava/util/List;)Ljava/util/List;</methodDescription><lineNumber>19</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>21</index><block>1</block><killingTest>br.com.guifr.hackerrank.LeftRotationTest.Return 51234 when rotate 4 times the array 12345</killingTest><description>mutated return of Object value for br/com/guifr/hackerrank/LeftRotation::rotateLeft to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LeftRotation.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.LeftRotation</mutatedClass><mutatedMethod>rotateLeft</mutatedMethod><methodDescription>(ILjava/util/List;)Ljava/util/List;</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>17</index><block>1</block><killingTest>br.com.guifr.hackerrank.LeftRotationTest.Return 51234 when rotate 4 times the array 12345</killingTest><description>removed call to java/util/stream/IntStream::forEach</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StudentGrades.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.StudentGrades</mutatedClass><mutatedMethod>getGrade</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>2</block><killingTest>br.com.guifr.beecrowd.AverageOneTest.Then return &#39;MEDIA = 4.84091&#39; when calculate avaerage 0.0 and 4.84091</killingTest><description>replaced return of double value with -(x + 1) for br/com/guifr/beecrowd/StudentGrades::getGrade</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StudentGrades.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.StudentGrades</mutatedClass><mutatedMethod>getWeight</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>19</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>3</block><killingTest>br.com.guifr.beecrowd.AverageOneTest.Then return &#39;MEDIA = 4.84091&#39; when calculate avaerage 0.0 and 4.84091</killingTest><description>replaced return of double value with -(x + 1) for br/com/guifr/beecrowd/StudentGrades::getWeight</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FrequencyQueries.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.FrequencyQueries$ActionOne</mutatedClass><mutatedMethod>execute</mutatedMethod><methodDescription>(Ljava/util/HashMap;Ljava/lang/Integer;)V</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><block>2</block><killingTest>br.com.guifr.hackerrank.FrequencyQueriesTest.Return [0,1,1q] When frequency queris With third exemple</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FrequencyQueries.java</sourceFile><mutatedClass>br.com.guifr.hackerrank.FrequencyQueries$ActionOne</mutatedClass><mutatedMethod>execute</mutatedMethod><methodDescription>(Ljava/util/HashMap;Ljava/lang/Integer;)V</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>1</block><killingTest>br.com.guifr.hackerrank.FrequencyQueriesTest.Return [0,1,1q] When frequency queris With third exemple</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DistanceBetweenTwoPoints.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.DistanceBetweenTwoPoints$Point</mutatedClass><mutatedMethod>getX</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>2</block><killingTest>br.com.guifr.beecrowd.DistanceBetweenTwoPointsTest.Return point wiht x = 1.0 and 7.0 with line &#39;1.0 7.0&#39;</killingTest><description>replaced return of double value with -(x + 1) for br/com/guifr/beecrowd/DistanceBetweenTwoPoints$Point::getX</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>DistanceBetweenTwoPoints.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.DistanceBetweenTwoPoints$Point</mutatedClass><mutatedMethod>getY</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>3</block><killingTest/><description>replaced return of double value with -(x + 1) for br/com/guifr/beecrowd/DistanceBetweenTwoPoints$Point::getY</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FuelSpent.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.FuelSpent</mutatedClass><mutatedMethod>when</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>13</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>1</block><killingTest>br.com.guifr.beecrowd.FuelSpentTest.Return 15.333 liters when trip 2 hours with speed 92 km</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FuelSpent.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.FuelSpent</mutatedClass><mutatedMethod>when</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>25</index><block>1</block><killingTest>br.com.guifr.beecrowd.FuelSpentTest.Return 15.333 liters when trip 2 hours with speed 92 km</killingTest><description>replaced return of double value with -(x + 1) for br/com/guifr/beecrowd/FuelSpent::when</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen$AxlePlus</mutatedClass><mutatedMethod>execute</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>1</block><killingTest>br.com.guifr.beecrowd.QueenTest.Return 1 when search diagonal in x axle to left up</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Queen.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Queen$AxleMinus</mutatedClass><mutatedMethod>execute</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>1</block><killingTest>br.com.guifr.beecrowd.QueenTest.Return 1 when search diagonal in x axle to left up</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Banknotes.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Banknotes$Print</mutatedClass><mutatedMethod>execute</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/String;</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>21</index><block>1</block><killingTest>br.com.guifr.beecrowd.BanknotesTest.Return &#39;NOTAS:&#39; when execute method of print class</killingTest><description>mutated return of Object value for br/com/guifr/beecrowd/Banknotes$Print::execute to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Average.java</sourceFile><mutatedClass>br.com.guifr.beecrowd.Main</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>72</index><block>1</block><killingTest/><description>removed call to java/io/PrintStream::print</description></mutation>
</mutations>
